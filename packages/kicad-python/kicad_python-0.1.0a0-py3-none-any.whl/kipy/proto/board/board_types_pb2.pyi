"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

This program source code file is part of KiCad, a free EDA CAD application.

Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
import builtins
import collections.abc
from .. import common
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PadStackType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PadStackTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PadStackType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PST_UNKNOWN: _PadStackType.ValueType
    PST_THROUGH: _PadStackType.ValueType
    'Through all layers; same shape on all layers'
    PST_BLIND_BURIED: _PadStackType.ValueType
    'From a start layer to end layer (inclusive); same shape on all included layers'

class PadStackType(_PadStackType, metaclass=_PadStackTypeEnumTypeWrapper):
    ...
PST_UNKNOWN: PadStackType.ValueType
PST_THROUGH: PadStackType.ValueType
'Through all layers; same shape on all layers'
PST_BLIND_BURIED: PadStackType.ValueType
'From a start layer to end layer (inclusive); same shape on all included layers'
global___PadStackType = PadStackType

class _UnconnectedLayerRemoval:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _UnconnectedLayerRemovalEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_UnconnectedLayerRemoval.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ULR_UNKNOWN: _UnconnectedLayerRemoval.ValueType
    ULR_KEEP: _UnconnectedLayerRemoval.ValueType
    'Keep annular rings on all layers'
    ULR_REMOVE: _UnconnectedLayerRemoval.ValueType
    'Remove annular rings on unconnected layers, including start and end layers.'
    ULR_REMOVE_EXCEPT_START_AND_END: _UnconnectedLayerRemoval.ValueType
    'Remove annular rings on unconnected layers, but preserve start and end layers even if unconnected.'

class UnconnectedLayerRemoval(_UnconnectedLayerRemoval, metaclass=_UnconnectedLayerRemovalEnumTypeWrapper):
    ...
ULR_UNKNOWN: UnconnectedLayerRemoval.ValueType
ULR_KEEP: UnconnectedLayerRemoval.ValueType
'Keep annular rings on all layers'
ULR_REMOVE: UnconnectedLayerRemoval.ValueType
'Remove annular rings on unconnected layers, including start and end layers.'
ULR_REMOVE_EXCEPT_START_AND_END: UnconnectedLayerRemoval.ValueType
'Remove annular rings on unconnected layers, but preserve start and end layers even if unconnected.'
global___UnconnectedLayerRemoval = UnconnectedLayerRemoval

class _PadStackShape:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PadStackShapeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PadStackShape.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PSS_UNKNOWN: _PadStackShape.ValueType
    PSS_CIRCLE: _PadStackShape.ValueType
    PSS_RECTANGLE: _PadStackShape.ValueType
    PSS_OVAL: _PadStackShape.ValueType
    PSS_TRAPEZOID: _PadStackShape.ValueType
    PSS_ROUNDRECT: _PadStackShape.ValueType
    PSS_CHAMFEREDRECT: _PadStackShape.ValueType
    PSS_CUSTOM: _PadStackShape.ValueType

class PadStackShape(_PadStackShape, metaclass=_PadStackShapeEnumTypeWrapper):
    """The shape of a pad on a given layer"""
PSS_UNKNOWN: PadStackShape.ValueType
PSS_CIRCLE: PadStackShape.ValueType
PSS_RECTANGLE: PadStackShape.ValueType
PSS_OVAL: PadStackShape.ValueType
PSS_TRAPEZOID: PadStackShape.ValueType
PSS_ROUNDRECT: PadStackShape.ValueType
PSS_CHAMFEREDRECT: PadStackShape.ValueType
PSS_CUSTOM: PadStackShape.ValueType
global___PadStackShape = PadStackShape

class _PadType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PadTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PadType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PT_UNKNOWN: _PadType.ValueType
    PT_PTH: _PadType.ValueType
    PT_SMD: _PadType.ValueType
    PT_EDGE_CONNECTOR: _PadType.ValueType
    PT_NPTH: _PadType.ValueType

class PadType(_PadType, metaclass=_PadTypeEnumTypeWrapper):
    """NOTE: There has been some discussion about what to do with pad attributes and properties.
    This may be considered somewhat unstable until we decide what to do with the KiCad side.
    It is not clear what the set of mutually-exclusive pad types will be at the end of the day,
    versus what will be non-exclusive attributes/properties.
    For now, this maps to PAD_ATTRIB in KiCad.
    """
PT_UNKNOWN: PadType.ValueType
PT_PTH: PadType.ValueType
PT_SMD: PadType.ValueType
PT_EDGE_CONNECTOR: PadType.ValueType
PT_NPTH: PadType.ValueType
global___PadType = PadType

class _FootprintMountingStyle:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FootprintMountingStyleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FootprintMountingStyle.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FMS_UNKNOWN: _FootprintMountingStyle.ValueType
    FMS_THROUGH_HOLE: _FootprintMountingStyle.ValueType
    FMS_SMD: _FootprintMountingStyle.ValueType
    FMS_UNSPECIFIED: _FootprintMountingStyle.ValueType

class FootprintMountingStyle(_FootprintMountingStyle, metaclass=_FootprintMountingStyleEnumTypeWrapper):
    ...
FMS_UNKNOWN: FootprintMountingStyle.ValueType
FMS_THROUGH_HOLE: FootprintMountingStyle.ValueType
FMS_SMD: FootprintMountingStyle.ValueType
FMS_UNSPECIFIED: FootprintMountingStyle.ValueType
global___FootprintMountingStyle = FootprintMountingStyle

class _ZoneConnectionStyle:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ZoneConnectionStyleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ZoneConnectionStyle.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ZCS_UNKNOWN: _ZoneConnectionStyle.ValueType
    ZCS_INHERITED: _ZoneConnectionStyle.ValueType
    ZCS_NONE: _ZoneConnectionStyle.ValueType
    ZCS_THERMAL: _ZoneConnectionStyle.ValueType
    ZCS_FULL: _ZoneConnectionStyle.ValueType
    ZCS_PTH_THERMAL: _ZoneConnectionStyle.ValueType
    'Thermal reliefs for plated through holes, solid for SMD pads'

class ZoneConnectionStyle(_ZoneConnectionStyle, metaclass=_ZoneConnectionStyleEnumTypeWrapper):
    """enum class ZONE_CONNECTION"""
ZCS_UNKNOWN: ZoneConnectionStyle.ValueType
ZCS_INHERITED: ZoneConnectionStyle.ValueType
ZCS_NONE: ZoneConnectionStyle.ValueType
ZCS_THERMAL: ZoneConnectionStyle.ValueType
ZCS_FULL: ZoneConnectionStyle.ValueType
ZCS_PTH_THERMAL: ZoneConnectionStyle.ValueType
'Thermal reliefs for plated through holes, solid for SMD pads'
global___ZoneConnectionStyle = ZoneConnectionStyle

@typing_extensions.final
class NetCode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int

    def __init__(self, *, value: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['value', b'value']) -> None:
        ...
global___NetCode = NetCode

@typing_extensions.final
class Net(google.protobuf.message.Message):
    """Describes a copper item's net"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CODE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int

    @property
    def code(self) -> global___NetCode:
        """A unique code representing this net"""
    name: builtins.str
    'Human-readable net name'

    def __init__(self, *, code: global___NetCode | None=..., name: builtins.str=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['code', b'code']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['code', b'code', 'name', b'name']) -> None:
        ...
global___Net = Net

@typing_extensions.final
class Track(google.protobuf.message.Message):
    """Represents a track segment on a board"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    LAYER_FIELD_NUMBER: builtins.int
    NET_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.KIID:
        ...

    @property
    def start(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def end(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def width(self) -> common.types.base_types_pb2.Distance:
        ...
    locked: common.types.base_types_pb2.LockedState.ValueType

    @property
    def layer(self) -> common.types.base_types_pb2.Layer:
        ...

    @property
    def net(self) -> global___Net:
        ...

    def __init__(self, *, id: common.types.base_types_pb2.KIID | None=..., start: common.types.base_types_pb2.Vector2 | None=..., end: common.types.base_types_pb2.Vector2 | None=..., width: common.types.base_types_pb2.Distance | None=..., locked: common.types.base_types_pb2.LockedState.ValueType=..., layer: common.types.base_types_pb2.Layer | None=..., net: global___Net | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['end', b'end', 'id', b'id', 'layer', b'layer', 'net', b'net', 'start', b'start', 'width', b'width']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['end', b'end', 'id', b'id', 'layer', b'layer', 'locked', b'locked', 'net', b'net', 'start', b'start', 'width', b'width']) -> None:
        ...
global___Track = Track

@typing_extensions.final
class Arc(google.protobuf.message.Message):
    """Represents an arc track (not a PCB_SHAPE in arc shape)
    Arc tracks in KiCad store start, midpoint, and end.
    All other values (center point, angles, etc) are inferred.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    MID_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    LAYER_FIELD_NUMBER: builtins.int
    NET_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.KIID:
        ...

    @property
    def start(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def mid(self) -> common.types.base_types_pb2.Vector2:
        """Arc midpoint"""

    @property
    def end(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def width(self) -> common.types.base_types_pb2.Distance:
        ...
    locked: common.types.base_types_pb2.LockedState.ValueType

    @property
    def layer(self) -> common.types.base_types_pb2.Layer:
        ...

    @property
    def net(self) -> global___Net:
        ...

    def __init__(self, *, id: common.types.base_types_pb2.KIID | None=..., start: common.types.base_types_pb2.Vector2 | None=..., mid: common.types.base_types_pb2.Vector2 | None=..., end: common.types.base_types_pb2.Vector2 | None=..., width: common.types.base_types_pb2.Distance | None=..., locked: common.types.base_types_pb2.LockedState.ValueType=..., layer: common.types.base_types_pb2.Layer | None=..., net: global___Net | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['end', b'end', 'id', b'id', 'layer', b'layer', 'mid', b'mid', 'net', b'net', 'start', b'start', 'width', b'width']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['end', b'end', 'id', b'id', 'layer', b'layer', 'locked', b'locked', 'mid', b'mid', 'net', b'net', 'start', b'start', 'width', b'width']) -> None:
        ...
global___Arc = Arc

@typing_extensions.final
class ChamferedRectCorners(google.protobuf.message.Message):
    """Which corners are chamfered in a PSS_CHAMFEREDRECT"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TOP_LEFT_FIELD_NUMBER: builtins.int
    TOP_RIGHT_FIELD_NUMBER: builtins.int
    BOTTOM_LEFT_FIELD_NUMBER: builtins.int
    BOTTOM_RIGHT_FIELD_NUMBER: builtins.int
    top_left: builtins.bool
    top_right: builtins.bool
    bottom_left: builtins.bool
    bottom_right: builtins.bool

    def __init__(self, *, top_left: builtins.bool=..., top_right: builtins.bool=..., bottom_left: builtins.bool=..., bottom_right: builtins.bool=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['bottom_left', b'bottom_left', 'bottom_right', b'bottom_right', 'top_left', b'top_left', 'top_right', b'top_right']) -> None:
        ...
global___ChamferedRectCorners = ChamferedRectCorners

@typing_extensions.final
class PadStackLayer(google.protobuf.message.Message):
    """The defintion of a padstack on a single layer"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LAYERS_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    CORNER_ROUNDING_RATIO_FIELD_NUMBER: builtins.int
    CHAMFER_RATIO_FIELD_NUMBER: builtins.int
    CHAMFERED_CORNERS_FIELD_NUMBER: builtins.int
    CUSTOM_SHAPES_FIELD_NUMBER: builtins.int

    @property
    def layers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common.types.base_types_pb2.Layer]:
        """The board layers of this padstack entry"""
    shape: global___PadStackShape.ValueType
    'The shape of the pad on this layer'

    @property
    def size(self) -> common.types.base_types_pb2.Vector2:
        """The size (x and y) of the shape on this layer"""
    corner_rounding_ratio: builtins.float
    'How much to round the corners of the shape by, as a fraction of min(size.x, size.y)\n    Only used for PSS_ROUNDRECT or PSS_CHAMFEREDRECT\n    '
    chamfer_ratio: builtins.float
    'How much to round the corners of the shape by, as a fraction of min(size.x, size.y)\n    Only used for PSS_CHAMFEREDRECT\n    '

    @property
    def chamfered_corners(self) -> global___ChamferedRectCorners:
        ...

    @property
    def custom_shapes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GraphicShape]:
        ...

    def __init__(self, *, layers: collections.abc.Iterable[common.types.base_types_pb2.Layer] | None=..., shape: global___PadStackShape.ValueType=..., size: common.types.base_types_pb2.Vector2 | None=..., corner_rounding_ratio: builtins.float=..., chamfer_ratio: builtins.float=..., chamfered_corners: global___ChamferedRectCorners | None=..., custom_shapes: collections.abc.Iterable[global___GraphicShape] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['chamfered_corners', b'chamfered_corners', 'size', b'size']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['chamfer_ratio', b'chamfer_ratio', 'chamfered_corners', b'chamfered_corners', 'corner_rounding_ratio', b'corner_rounding_ratio', 'custom_shapes', b'custom_shapes', 'layers', b'layers', 'shape', b'shape', 'size', b'size']) -> None:
        ...
global___PadStackLayer = PadStackLayer

@typing_extensions.final
class PadStack(google.protobuf.message.Message):
    """A pad stack definition for a multilayer pad or via."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    START_LAYER_FIELD_NUMBER: builtins.int
    END_LAYER_FIELD_NUMBER: builtins.int
    UNCONNECTED_LAYER_REMOVAL_FIELD_NUMBER: builtins.int
    DRILL_DIAMETER_FIELD_NUMBER: builtins.int
    LAYERS_FIELD_NUMBER: builtins.int
    ANGLE_FIELD_NUMBER: builtins.int
    type: global___PadStackType.ValueType
    'What type of pad stack this represents.'

    @property
    def start_layer(self) -> common.types.base_types_pb2.Layer:
        """Lowest (closest to F_Cu) layer this stack exists on.  Ignored if type == PST_THROUGH."""

    @property
    def end_layer(self) -> common.types.base_types_pb2.Layer:
        """Highest (closest to B_Cu) layer this stack exists on.  Ignored if type == PST_THROUGH."""
    unconnected_layer_removal: global___UnconnectedLayerRemoval.ValueType
    'How to treat pad shapes on unconnected layers.'

    @property
    def drill_diameter(self) -> common.types.base_types_pb2.Vector2:
        """The diameter, in x and y, of the pad's drilled hole, if this pad has a hole.
        x and y will be the same value if the hole is round.
        """

    @property
    def layers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PadStackLayer]:
        ...

    @property
    def angle(self) -> common.types.base_types_pb2.Angle:
        """The overall rotation of this padstack (affects all layers)"""

    def __init__(self, *, type: global___PadStackType.ValueType=..., start_layer: common.types.base_types_pb2.Layer | None=..., end_layer: common.types.base_types_pb2.Layer | None=..., unconnected_layer_removal: global___UnconnectedLayerRemoval.ValueType=..., drill_diameter: common.types.base_types_pb2.Vector2 | None=..., layers: collections.abc.Iterable[global___PadStackLayer] | None=..., angle: common.types.base_types_pb2.Angle | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['angle', b'angle', 'drill_diameter', b'drill_diameter', 'end_layer', b'end_layer', 'start_layer', b'start_layer']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['angle', b'angle', 'drill_diameter', b'drill_diameter', 'end_layer', b'end_layer', 'layers', b'layers', 'start_layer', b'start_layer', 'type', b'type', 'unconnected_layer_removal', b'unconnected_layer_removal']) -> None:
        ...
global___PadStack = PadStack

@typing_extensions.final
class Via(google.protobuf.message.Message):
    """Represents a via"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    PAD_STACK_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    NET_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.KIID:
        """The unique identifier of the via"""

    @property
    def position(self) -> common.types.base_types_pb2.Vector2:
        """The location of the via's center point"""

    @property
    def pad_stack(self) -> global___PadStack:
        """The pad stack definition for this via.  The via's VIATYPE (blind/buried/normal) is inferred from this."""
    locked: common.types.base_types_pb2.LockedState.ValueType

    @property
    def net(self) -> global___Net:
        ...

    def __init__(self, *, id: common.types.base_types_pb2.KIID | None=..., position: common.types.base_types_pb2.Vector2 | None=..., pad_stack: global___PadStack | None=..., locked: common.types.base_types_pb2.LockedState.ValueType=..., net: global___Net | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['id', b'id', 'net', b'net', 'pad_stack', b'pad_stack', 'position', b'position']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['id', b'id', 'locked', b'locked', 'net', b'net', 'pad_stack', b'pad_stack', 'position', b'position']) -> None:
        ...
global___Via = Via

@typing_extensions.final
class GraphicSegmentAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int

    @property
    def start(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def end(self) -> common.types.base_types_pb2.Vector2:
        ...

    def __init__(self, *, start: common.types.base_types_pb2.Vector2 | None=..., end: common.types.base_types_pb2.Vector2 | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['end', b'end', 'start', b'start']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['end', b'end', 'start', b'start']) -> None:
        ...
global___GraphicSegmentAttributes = GraphicSegmentAttributes

@typing_extensions.final
class GraphicRectangleAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TOP_LEFT_FIELD_NUMBER: builtins.int
    BOTTOM_RIGHT_FIELD_NUMBER: builtins.int

    @property
    def top_left(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def bottom_right(self) -> common.types.base_types_pb2.Vector2:
        ...

    def __init__(self, *, top_left: common.types.base_types_pb2.Vector2 | None=..., bottom_right: common.types.base_types_pb2.Vector2 | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['bottom_right', b'bottom_right', 'top_left', b'top_left']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['bottom_right', b'bottom_right', 'top_left', b'top_left']) -> None:
        ...
global___GraphicRectangleAttributes = GraphicRectangleAttributes

@typing_extensions.final
class GraphicArcAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_FIELD_NUMBER: builtins.int
    MID_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int

    @property
    def start(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def mid(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def end(self) -> common.types.base_types_pb2.Vector2:
        ...

    def __init__(self, *, start: common.types.base_types_pb2.Vector2 | None=..., mid: common.types.base_types_pb2.Vector2 | None=..., end: common.types.base_types_pb2.Vector2 | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['end', b'end', 'mid', b'mid', 'start', b'start']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['end', b'end', 'mid', b'mid', 'start', b'start']) -> None:
        ...
global___GraphicArcAttributes = GraphicArcAttributes

@typing_extensions.final
class GraphicCircleAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CENTER_FIELD_NUMBER: builtins.int
    RADIUS_FIELD_NUMBER: builtins.int

    @property
    def center(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def radius(self) -> common.types.base_types_pb2.Distance:
        ...

    def __init__(self, *, center: common.types.base_types_pb2.Vector2 | None=..., radius: common.types.base_types_pb2.Distance | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['center', b'center', 'radius', b'radius']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['center', b'center', 'radius', b'radius']) -> None:
        ...
global___GraphicCircleAttributes = GraphicCircleAttributes

@typing_extensions.final
class GraphicBezierAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_FIELD_NUMBER: builtins.int
    CONTROL1_FIELD_NUMBER: builtins.int
    CONTROL2_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int

    @property
    def start(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def control1(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def control2(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def end(self) -> common.types.base_types_pb2.Vector2:
        ...

    def __init__(self, *, start: common.types.base_types_pb2.Vector2 | None=..., control1: common.types.base_types_pb2.Vector2 | None=..., control2: common.types.base_types_pb2.Vector2 | None=..., end: common.types.base_types_pb2.Vector2 | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['control1', b'control1', 'control2', b'control2', 'end', b'end', 'start', b'start']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['control1', b'control1', 'control2', b'control2', 'end', b'end', 'start', b'start']) -> None:
        ...
global___GraphicBezierAttributes = GraphicBezierAttributes

@typing_extensions.final
class GraphicShape(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    LAYER_FIELD_NUMBER: builtins.int
    NET_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    SEGMENT_FIELD_NUMBER: builtins.int
    RECTANGLE_FIELD_NUMBER: builtins.int
    ARC_FIELD_NUMBER: builtins.int
    CIRCLE_FIELD_NUMBER: builtins.int
    POLYGON_FIELD_NUMBER: builtins.int
    BEZIER_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.KIID:
        ...
    locked: common.types.base_types_pb2.LockedState.ValueType

    @property
    def layer(self) -> common.types.base_types_pb2.Layer:
        ...

    @property
    def net(self) -> global___Net:
        ...

    @property
    def attributes(self) -> common.types.base_types_pb2.GraphicAttributes:
        ...

    @property
    def segment(self) -> global___GraphicSegmentAttributes:
        ...

    @property
    def rectangle(self) -> global___GraphicRectangleAttributes:
        ...

    @property
    def arc(self) -> global___GraphicArcAttributes:
        ...

    @property
    def circle(self) -> global___GraphicCircleAttributes:
        ...

    @property
    def polygon(self) -> common.types.base_types_pb2.PolySet:
        ...

    @property
    def bezier(self) -> global___GraphicBezierAttributes:
        ...

    def __init__(self, *, id: common.types.base_types_pb2.KIID | None=..., locked: common.types.base_types_pb2.LockedState.ValueType=..., layer: common.types.base_types_pb2.Layer | None=..., net: global___Net | None=..., attributes: common.types.base_types_pb2.GraphicAttributes | None=..., segment: global___GraphicSegmentAttributes | None=..., rectangle: global___GraphicRectangleAttributes | None=..., arc: global___GraphicArcAttributes | None=..., circle: global___GraphicCircleAttributes | None=..., polygon: common.types.base_types_pb2.PolySet | None=..., bezier: global___GraphicBezierAttributes | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['arc', b'arc', 'attributes', b'attributes', 'bezier', b'bezier', 'circle', b'circle', 'geometry', b'geometry', 'id', b'id', 'layer', b'layer', 'net', b'net', 'polygon', b'polygon', 'rectangle', b'rectangle', 'segment', b'segment']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['arc', b'arc', 'attributes', b'attributes', 'bezier', b'bezier', 'circle', b'circle', 'geometry', b'geometry', 'id', b'id', 'layer', b'layer', 'locked', b'locked', 'net', b'net', 'polygon', b'polygon', 'rectangle', b'rectangle', 'segment', b'segment']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['geometry', b'geometry']) -> typing_extensions.Literal['segment', 'rectangle', 'arc', 'circle', 'polygon', 'bezier'] | None:
        ...
global___GraphicShape = GraphicShape

@typing_extensions.final
class Text(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int

    @property
    def text(self) -> common.types.base_types_pb2.Text:
        ...

    def __init__(self, *, text: common.types.base_types_pb2.Text | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['text', b'text']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['text', b'text']) -> None:
        ...
global___Text = Text

@typing_extensions.final
class Pad(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    NUMBER_FIELD_NUMBER: builtins.int
    NET_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PAD_STACK_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.KIID:
        ...
    locked: common.types.base_types_pb2.LockedState.ValueType
    number: builtins.str

    @property
    def net(self) -> global___Net:
        ...
    type: global___PadType.ValueType

    @property
    def pad_stack(self) -> global___PadStack:
        ...

    @property
    def position(self) -> common.types.base_types_pb2.Vector2:
        """A pad's position is always relative to the parent footprint's origin"""

    def __init__(self, *, id: common.types.base_types_pb2.KIID | None=..., locked: common.types.base_types_pb2.LockedState.ValueType=..., number: builtins.str=..., net: global___Net | None=..., type: global___PadType.ValueType=..., pad_stack: global___PadStack | None=..., position: common.types.base_types_pb2.Vector2 | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['id', b'id', 'net', b'net', 'pad_stack', b'pad_stack', 'position', b'position']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['id', b'id', 'locked', b'locked', 'net', b'net', 'number', b'number', 'pad_stack', b'pad_stack', 'position', b'position', 'type', b'type']) -> None:
        ...
global___Pad = Pad

@typing_extensions.final
class Zone(google.protobuf.message.Message):
    """Copper zone, non-copper zone, or rule area
    TODO
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___Zone = Zone

@typing_extensions.final
class Dimension(google.protobuf.message.Message):
    """TODO"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___Dimension = Dimension

@typing_extensions.final
class ReferenceImage(google.protobuf.message.Message):
    """TODO"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___ReferenceImage = ReferenceImage

@typing_extensions.final
class Group(google.protobuf.message.Message):
    """TODO"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___Group = Group

@typing_extensions.final
class FieldId(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    id: builtins.int

    def __init__(self, *, id: builtins.int=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['id', b'id']) -> None:
        ...
global___FieldId = FieldId

@typing_extensions.final
class Field(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> global___FieldId:
        ...
    name: builtins.str

    @property
    def text(self) -> global___Text:
        ...

    def __init__(self, *, id: global___FieldId | None=..., name: builtins.str=..., text: global___Text | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['id', b'id', 'text', b'text']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['id', b'id', 'name', b'name', 'text', b'text']) -> None:
        ...
global___Field = Field

@typing_extensions.final
class Model3D(google.protobuf.message.Message):
    """TODO"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(self) -> None:
        ...
global___Model3D = Model3D

@typing_extensions.final
class FootprintAttributes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DESCRIPTION_FIELD_NUMBER: builtins.int
    KEYWORDS_FIELD_NUMBER: builtins.int
    NOT_IN_SCHEMATIC_FIELD_NUMBER: builtins.int
    EXCLUDE_FROM_POSITION_FILES_FIELD_NUMBER: builtins.int
    EXCLUDE_FROM_BILL_OF_MATERIALS_FIELD_NUMBER: builtins.int
    EXEMPT_FROM_COURTYARD_REQUIREMENT_FIELD_NUMBER: builtins.int
    DO_NOT_POPULATE_FIELD_NUMBER: builtins.int
    MOUNTING_STYLE_FIELD_NUMBER: builtins.int
    description: builtins.str
    keywords: builtins.str
    not_in_schematic: builtins.bool
    exclude_from_position_files: builtins.bool
    exclude_from_bill_of_materials: builtins.bool
    exempt_from_courtyard_requirement: builtins.bool
    do_not_populate: builtins.bool
    mounting_style: global___FootprintMountingStyle.ValueType

    def __init__(self, *, description: builtins.str=..., keywords: builtins.str=..., not_in_schematic: builtins.bool=..., exclude_from_position_files: builtins.bool=..., exclude_from_bill_of_materials: builtins.bool=..., exempt_from_courtyard_requirement: builtins.bool=..., do_not_populate: builtins.bool=..., mounting_style: global___FootprintMountingStyle.ValueType=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['description', b'description', 'do_not_populate', b'do_not_populate', 'exclude_from_bill_of_materials', b'exclude_from_bill_of_materials', 'exclude_from_position_files', b'exclude_from_position_files', 'exempt_from_courtyard_requirement', b'exempt_from_courtyard_requirement', 'keywords', b'keywords', 'mounting_style', b'mounting_style', 'not_in_schematic', b'not_in_schematic']) -> None:
        ...
global___FootprintAttributes = FootprintAttributes

@typing_extensions.final
class DesignRuleOverrides(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLEARANCE_FIELD_NUMBER: builtins.int
    SOLDER_MASK_MARGIN_FIELD_NUMBER: builtins.int
    SOLDER_PASTE_MARGIN_FIELD_NUMBER: builtins.int
    SOLDER_PASTE_MARGIN_RATIO_FIELD_NUMBER: builtins.int
    ZONE_CONNECTION_FIELD_NUMBER: builtins.int

    @property
    def clearance(self) -> common.types.base_types_pb2.Distance:
        """Copper-to-copper clearance override"""

    @property
    def solder_mask_margin(self) -> common.types.base_types_pb2.Distance:
        """Solder mask expansion/contraction"""

    @property
    def solder_paste_margin(self) -> common.types.base_types_pb2.Distance:
        """Solder paste expansion/contraction"""
    solder_paste_margin_ratio: builtins.float
    'Solder paste expansion/contraction ratio'
    zone_connection: global___ZoneConnectionStyle.ValueType

    def __init__(self, *, clearance: common.types.base_types_pb2.Distance | None=..., solder_mask_margin: common.types.base_types_pb2.Distance | None=..., solder_paste_margin: common.types.base_types_pb2.Distance | None=..., solder_paste_margin_ratio: builtins.float=..., zone_connection: global___ZoneConnectionStyle.ValueType=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['clearance', b'clearance', 'solder_mask_margin', b'solder_mask_margin', 'solder_paste_margin', b'solder_paste_margin']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['clearance', b'clearance', 'solder_mask_margin', b'solder_mask_margin', 'solder_paste_margin', b'solder_paste_margin', 'solder_paste_margin_ratio', b'solder_paste_margin_ratio', 'zone_connection', b'zone_connection']) -> None:
        ...
global___DesignRuleOverrides = DesignRuleOverrides

@typing_extensions.final
class NetTieDefinition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PAD_NUMBER_FIELD_NUMBER: builtins.int

    @property
    def pad_number(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        ...

    def __init__(self, *, pad_number: collections.abc.Iterable[builtins.str] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['pad_number', b'pad_number']) -> None:
        ...
global___NetTieDefinition = NetTieDefinition

@typing_extensions.final
class Footprint(google.protobuf.message.Message):
    """A footprint definition (i.e. what would be in a library)"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    ANCHOR_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    OVERRIDES_FIELD_NUMBER: builtins.int
    NET_TIES_FIELD_NUMBER: builtins.int
    PRIVATE_LAYERS_FIELD_NUMBER: builtins.int
    REFERENCE_FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_FIELD_NUMBER: builtins.int
    DATASHEET_FIELD_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.LibraryIdentifier:
        ...

    @property
    def anchor(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def attributes(self) -> global___FootprintAttributes:
        ...

    @property
    def overrides(self) -> global___DesignRuleOverrides:
        ...

    @property
    def net_ties(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NetTieDefinition]:
        ...

    @property
    def private_layers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common.types.base_types_pb2.Layer]:
        ...

    @property
    def reference_field(self) -> global___Field:
        ...

    @property
    def value_field(self) -> global___Field:
        ...

    @property
    def datasheet_field(self) -> global___Field:
        ...

    @property
    def description_field(self) -> global___Field:
        ...

    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.any_pb2.Any]:
        """All footprint items except for mandatory fields"""

    def __init__(self, *, id: common.types.base_types_pb2.LibraryIdentifier | None=..., anchor: common.types.base_types_pb2.Vector2 | None=..., attributes: global___FootprintAttributes | None=..., overrides: global___DesignRuleOverrides | None=..., net_ties: collections.abc.Iterable[global___NetTieDefinition] | None=..., private_layers: collections.abc.Iterable[common.types.base_types_pb2.Layer] | None=..., reference_field: global___Field | None=..., value_field: global___Field | None=..., datasheet_field: global___Field | None=..., description_field: global___Field | None=..., items: collections.abc.Iterable[google.protobuf.any_pb2.Any] | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['anchor', b'anchor', 'attributes', b'attributes', 'datasheet_field', b'datasheet_field', 'description_field', b'description_field', 'id', b'id', 'overrides', b'overrides', 'reference_field', b'reference_field', 'value_field', b'value_field']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['anchor', b'anchor', 'attributes', b'attributes', 'datasheet_field', b'datasheet_field', 'description_field', b'description_field', 'id', b'id', 'items', b'items', 'net_ties', b'net_ties', 'overrides', b'overrides', 'private_layers', b'private_layers', 'reference_field', b'reference_field', 'value_field', b'value_field']) -> None:
        ...
global___Footprint = Footprint

@typing_extensions.final
class FootprintInstance(google.protobuf.message.Message):
    """An instance of a footprint on a board"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    POSITION_FIELD_NUMBER: builtins.int
    ORIENTATION_FIELD_NUMBER: builtins.int
    LAYER_FIELD_NUMBER: builtins.int
    LOCKED_FIELD_NUMBER: builtins.int
    DEFINITION_FIELD_NUMBER: builtins.int
    REFERENCE_FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_FIELD_NUMBER: builtins.int
    DATASHEET_FIELD_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    OVERRIDES_FIELD_NUMBER: builtins.int

    @property
    def id(self) -> common.types.base_types_pb2.KIID:
        ...

    @property
    def position(self) -> common.types.base_types_pb2.Vector2:
        ...

    @property
    def orientation(self) -> common.types.base_types_pb2.Angle:
        ...

    @property
    def layer(self) -> common.types.base_types_pb2.Layer:
        ...
    locked: common.types.base_types_pb2.LockedState.ValueType

    @property
    def definition(self) -> global___Footprint:
        ...

    @property
    def reference_field(self) -> global___Field:
        ...

    @property
    def value_field(self) -> global___Field:
        ...

    @property
    def datasheet_field(self) -> global___Field:
        ...

    @property
    def description_field(self) -> global___Field:
        ...

    @property
    def attributes(self) -> global___FootprintAttributes:
        ...

    @property
    def overrides(self) -> global___DesignRuleOverrides:
        ...

    def __init__(self, *, id: common.types.base_types_pb2.KIID | None=..., position: common.types.base_types_pb2.Vector2 | None=..., orientation: common.types.base_types_pb2.Angle | None=..., layer: common.types.base_types_pb2.Layer | None=..., locked: common.types.base_types_pb2.LockedState.ValueType=..., definition: global___Footprint | None=..., reference_field: global___Field | None=..., value_field: global___Field | None=..., datasheet_field: global___Field | None=..., description_field: global___Field | None=..., attributes: global___FootprintAttributes | None=..., overrides: global___DesignRuleOverrides | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['attributes', b'attributes', 'datasheet_field', b'datasheet_field', 'definition', b'definition', 'description_field', b'description_field', 'id', b'id', 'layer', b'layer', 'orientation', b'orientation', 'overrides', b'overrides', 'position', b'position', 'reference_field', b'reference_field', 'value_field', b'value_field']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['attributes', b'attributes', 'datasheet_field', b'datasheet_field', 'definition', b'definition', 'description_field', b'description_field', 'id', b'id', 'layer', b'layer', 'locked', b'locked', 'orientation', b'orientation', 'overrides', b'overrides', 'position', b'position', 'reference_field', b'reference_field', 'value_field', b'value_field']) -> None:
        ...
global___FootprintInstance = FootprintInstance
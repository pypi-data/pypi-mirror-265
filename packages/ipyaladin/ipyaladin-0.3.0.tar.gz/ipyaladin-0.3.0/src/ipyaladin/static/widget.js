import l from"https://esm.sh/aladin-lite@3.3.3-beta";var d=0;function h(e){let r=e.split("_");for(let n=1;n<r.length;n++)r[n]=r[n].charAt(0).toUpperCase()+r[n].slice(1);return r.join("")}async function v({model:e}){await l.init;let r={};e.get("init_options").forEach(n=>{r[h(n)]=e.get(n);let o=document.createElement("div");o.classList.add("aladin-widget"),o.style.height=`${r.height}px`,o.id=`aladin-lite-div-${d}`;let a=new l.aladin(o,r);d+=1;let t=!1,c=!1;a.on("positionChanged",i=>{c?c=!1:(t=!0,e.set("target",`${i.ra} ${i.dec}`),e.save_changes())}),e.on("change:target",()=>{if(t)t=!1;else{c=!0;let i=e.get("target");a.gotoObject(i)}})})}function p({model:e,el:r}){r.appendChild(aladinDiv);let n=!1,o=!1;return aladin.on("zoomChanged",a=>{n?n=!1:(o=!0,e.set("fov",parseFloat(a.toFixed(5))),e.save_changes())}),e.on("change:fov",()=>{if(o)o=!1;else{n=!0;let a=e.get("fov");aladin.setFoV(a)}}),e.on("change:height",()=>{let a=e.get("height");aladinDiv.style.height=`${a}px`}),aladin.on("objectHovered",a=>{a.data!=null&&e.send({event_type:"object_hovered",content:{ra:a.ra,dec:a.dec}})}),aladin.on("objectClicked",a=>{let t={ra:a.ra,dec:a.dec};a.data!==void 0&&(t.data=a.data),e.set("clicked",t),e.send({event_type:"object_clicked",content:t}),e.save_changes()}),aladin.on("click",a=>{e.send({event_type:"click",content:a})}),aladin.on("select",a=>{let t=[];a.forEach(c=>{c.forEach(i=>{t.push({ra:i.ra,dec:i.dec,data:i.data,x:i.x,y:i.y})})}),e.send({event_type:"select",content:t})}),e.on("change:coo_frame",()=>{aladin.setFrame(e.get("coo_frame"))}),e.on("change:survey",()=>{aladin.setImageSurvey(e.get("survey"))}),e.on("change:overlay_survey",()=>{aladin.setOverlayImageLayer(e.get("overlay_survey"))}),e.on("change:overlay_survey_opacity",()=>{aladin.getOverlayImageLayer().setAlpha(e.get("overlay_survey_opacity"))}),e.on("msg:custom",a=>{let t={};switch(a.event_name){case"add_catalog_from_URL":aladin.addCatalog(l.catalogFromURL(a.votable_URL,a.options));break;case"add_MOC_from_URL":t=a.options,t.lineWidth===void 0&&(t.lineWidth=3),aladin.addMOC(l.MOCFromURL(a.moc_URL,t));break;case"add_MOC_from_dict":t=a.options,t.lineWidth===void 0&&(t.lineWidth=3),aladin.addMOC(l.MOCFromJSON(a.moc_dict,t));break;case"add_overlay_from_stcs":let c=l.graphicOverlay(a.overlay_options);aladin.addOverlay(c),c.addFootprints(l.footprintsFromSTCS(a.stc_string));break;case"change_colormap":aladin.getBaseImageLayer().setColormap(a.colormap);break;case"get_JPG_thumbnail":aladin.exportAsPNG();break;case"trigger_rectangular_selection":aladin.select();break;case"add_table":let i=e.get("_table"),f=new TextDecoder("utf-8"),g=new Blob([f.decode(i)]),s=URL.createObjectURL(g);l.catalogFromURL(s,Object.assign(a.options,{onClick:"showTable"}),_=>{aladin.addCatalog(_)},!1),URL.revokeObjectURL(s);break}}),()=>{e.off("change:target"),e.off("change:fov"),e.off("change:height"),e.off("change:coo_frame"),e.off("change:survey"),e.off("change:overlay_survey"),e.off("change:overlay_survey_opacity"),e.off("change:trigger_event"),e.off("change:_table"),e.off("msg:custom"),aladin.off("positionChanged"),aladin.off("zoomChanged"),aladin.off("objectHovered"),aladin.off("objectClicked"),aladin.off("click"),aladin.off("select")}}var C={initialize:v,render:p};export{C as default};
//# sourceMappingURL=data:application/json;base64,

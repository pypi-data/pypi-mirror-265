"""
    Koverse Data Platform (KDP) API

    The KDP API is a REST API that can be used to create, access, and update data in KDP Workspaces. Please note that the Python client library follows Python's naming convention of snake casing for fields, even though they may appear in camel case in the API specification. <p><b>By default this api documentation targets the koverse production server at 'api.app.koverse.com' You can provide the hostname of your koverse instance to this documentation page via the 'host' query param.</p> <p><b>For example providing host - https://koverse-docs.saic.com/api?host=api.myHost.com, will update requests to target the provided host.</b></p> <p><b>Authentication request example with provided host - https://api.myHost.com/authentication</b></p>  # noqa: E501

    The version of the OpenAPI document: 4.125.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import kdp_api
from kdp_api.api.manage_records_api import ManageRecordsApi  # noqa: E501


class TestManageRecordsApi(unittest.TestCase):
    """ManageRecordsApi unit test stubs"""

    def setUp(self):
        self.api = ManageRecordsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_dataset_document_query(self):
        """Test case for delete_dataset_document_query

        Delete Documents - Deletes documents from a dataset based on a given query  # noqa: E501
        """
        pass

    def test_delete_dataset_record_id(self):
        """Test case for delete_dataset_record_id

        Delete Records - Deletes records from a dataset based on the given ids  # noqa: E501
        """
        pass

    def test_delete_dataset_record_query(self):
        """Test case for delete_dataset_record_query

        Delete Records - Deletes records from a dataset based on a given query  # noqa: E501
        """
        pass

    def test_post_clear_dataset(self):
        """Test case for post_clear_dataset

        Delete - Clear a dataset  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()

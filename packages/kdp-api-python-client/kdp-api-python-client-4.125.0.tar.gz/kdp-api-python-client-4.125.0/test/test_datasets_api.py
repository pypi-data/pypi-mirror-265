"""
    Koverse Data Platform (KDP) API

    The KDP API is a REST API that can be used to create, access, and update data in KDP Workspaces. Please note that the Python client library follows Python's naming convention of snake casing for fields, even though they may appear in camel case in the API specification. <p><b>By default this api documentation targets the koverse production server at 'api.app.koverse.com' You can provide the hostname of your koverse instance to this documentation page via the 'host' query param.</p> <p><b>For example providing host - https://koverse-docs.saic.com/api?host=api.myHost.com, will update requests to target the provided host.</b></p> <p><b>Authentication request example with provided host - https://api.myHost.com/authentication</b></p>  # noqa: E501

    The version of the OpenAPI document: 4.125.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import kdp_api
from kdp_api.api.datasets_api import DatasetsApi  # noqa: E501


class TestDatasetsApi(unittest.TestCase):
    """DatasetsApi unit test stubs"""

    def setUp(self):
        self.api = DatasetsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_datasets_id(self):
        """Test case for delete_datasets_id

        Datasets - Remove Dataset with given ID  # noqa: E501
        """
        pass

    def test_get_datasets(self):
        """Test case for get_datasets

        Datasets - Retrieve a list of datasets  # noqa: E501
        """
        pass

    def test_get_datasets_id(self):
        """Test case for get_datasets_id

        Datasets - Retrieve a Dataset with the given ID  # noqa: E501
        """
        pass

    def test_get_jobs(self):
        """Test case for get_jobs

        Jobs - Retrieves list of Jobs  # noqa: E501
        """
        pass

    def test_get_jobs_id(self):
        """Test case for get_jobs_id

        Jobs - Retrieve Job with the given ID  # noqa: E501
        """
        pass

    def test_get_schema(self):
        """Test case for get_schema

        Schema - Get the schema for the given dataset id  # noqa: E501
        """
        pass

    def test_get_segments(self):
        """Test case for get_segments

        Segments - Retrieves a list of Segments  # noqa: E501
        """
        pass

    def test_get_segments_id(self):
        """Test case for get_segments_id

        Segments - Retrieves Segment with the given ID  # noqa: E501
        """
        pass

    def test_patch_datasets_id(self):
        """Test case for patch_datasets_id

        Datasets - Updates the provided fields of Dataset with given ID  # noqa: E501
        """
        pass

    def test_patch_jobs_id(self):
        """Test case for patch_jobs_id

        Jobs - Updates fields provided for Jobs with the ID given  # noqa: E501
        """
        pass

    def test_post_datasets(self):
        """Test case for post_datasets

        Datasets - Create a new Dataset  # noqa: E501
        """
        pass

    def test_post_jobs(self):
        """Test case for post_jobs

        Jobs - Creates a new Job  # noqa: E501
        """
        pass

    def test_put_datasets_id(self):
        """Test case for put_datasets_id

        Datasets - Updates Dataset with given ID  # noqa: E501
        """
        pass

    def test_put_jobs_id(self):
        """Test case for put_jobs_id

        Jobs - Updates Job with the ID given  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()

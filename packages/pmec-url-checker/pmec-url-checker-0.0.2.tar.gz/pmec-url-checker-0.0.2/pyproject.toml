# Copyright (c) Microsoft Corporation. All rights reserved.
# Highly Confidential Material

[tool.poetry]
name = "pmec-url-checker"
version = "0.0.2"
description = "URL checker tool to validate cofigured URL patterns in firewall rules for AP5GC"
license = "None"

readme = 'README.md'

authors = ["Sagar Bhatt <sagbhatt@microsoft.com>"]

repository = "https://dev.azure.com/msazuredev/AzureForOperators/_git/fcore-pmec-deploymentvalidation"
homepage = "https://dev.azure.com/msazuredev/AzureForOperators/_git/fcore-pmec-deploymentvalidation"

keywords = []

[tool.poetry.scripts]
pmec-url-checker = 'pmec_url_checker.main:main'

[tool.poetry.dependencies]
python = "^3.9"

setuptools = "69.1.0"
requests = "^2.31.0"
pandas = "^2.2.1"
dnspython = "^2.6.1"

[tool.poetry.dev-dependencies]
mypy = ">=0.942"
python-static-checks = ">=1.0.1"
types-setuptools = ">=57.4.7"


[tool.pmec-url-checker.logging]
log_format = "%(asctime)s.%(msecs)03d %(filename)s:%(lineno)d %(levelname)s %(message)s"
log_date_format = "%Y-%m-%dT%H:%M:%S"
log_level = "INFO"
log_cli = true
log_cli_level = "INFO"
log_file = "pytest.log"
log_file_level = 0
log_file_format = "%(asctime)s.%(msecs)03d %(filename)s:%(lineno)d %(levelname)s %(message)s"
log_file_date_format = "%Y-%m-%dT%H:%M:%S"

[[tool.poetry.source]]
name = "afo"
url = "https://pkgs.dev.azure.com/msazuredev/AzureForOperators/_packaging/python/pypi/simple/"
priority = "default"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
# Ignore test code as pylint doesn't get along with pytest fixtures very well.
# These patterns are applied per-file and cannot be applied to entire directories.
ignore-patterns = "test.*,.*test,conftest.py"
disable = [
    # Ignore conventions and refactors - not recommended to include.
    "C",
    "R",

    # Covered by mypy
    "no-member",
    "no-name-in-module",
    "unsubscriptable-object"
]

[tool.mypy]
files = ["pmec-url-checker"]
# Ref: https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
ignore_missing_imports = true
ignore_errors = true

# Enable all optional checking flags to make mypy more useful.
strict = false

# Error codes can be used to write more specific `type: ignore` comments.
show_error_codes = true

# Enable additional useful error codes, see https://mypy.readthedocs.io/en/stable/error_code_list2.html
enable_error_code = [
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]

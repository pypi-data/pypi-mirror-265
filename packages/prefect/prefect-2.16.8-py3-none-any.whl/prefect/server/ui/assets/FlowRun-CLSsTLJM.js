import{d as I,g,f as p,o,n as L,N as k,p as v,u as e,af as O,c as u,ag as z,a as i,ah as J,ai as $,aj as G,ak as H,al as K,E as M,am as Q,an as W,q as X,ao as Y,ap as Z,aq as ee,ar as ae,h as r,i as y,a1 as le,as as se,at as te,au as ne,av as oe,aw as ue,ax as re,ay as ie,az as pe,aA as fe,aB as ce,aC as x,D as de,ae as F,aD as ve}from"./index-CRy24dhJ.js";import{u as we}from"./usePageTitle-Bw_DulyG.js";const me={class:"flow-run-graphs__graph-panel-container"},_e={class:"flow-run-graphs__graphs"},be={class:"flow-run-graphs__panel p-background"},ge=I({__name:"FlowRunGraphs",props:{flowRun:{}},setup(C){const m=g(),c=g(!1),l=g(null),a=p(()=>{var d,s;return{root:{"flow-run-graphs--fullscreen":c.value,"flow-run-graphs--show-panel":((d=l.value)==null?void 0:d.kind)==="task-run"||((s=l.value)==null?void 0:s.kind)==="flow-run"}}});return(d,s)=>{var _,f,w;return o(),L("div",{class:H(["flow-run-graphs",a.value.root])},[k("div",me,[k("div",_e,[v(e(O),{fullscreen:c.value,"onUpdate:fullscreen":s[0]||(s[0]=n=>c.value=n),viewport:m.value,"onUpdate:viewport":s[1]||(s[1]=n=>m.value=n),selected:l.value,"onUpdate:selected":s[2]||(s[2]=n=>l.value=n),"flow-run":d.flowRun,class:"flow-run-graphs__flow-run"},null,8,["fullscreen","viewport","selected","flow-run"])]),k("div",be,[((_=l.value)==null?void 0:_.kind)==="task-run"||((f=l.value)==null?void 0:f.kind)==="flow-run"?(o(),u(e(z),{key:0,selection:l.value,"onUpdate:selection":s[3]||(s[3]=n=>l.value=n),floating:c.value},null,8,["selection","floating"])):i("",!0)])]),l.value&&l.value.kind==="artifacts"?(o(),u(e(J),{key:0,selection:l.value,"onUpdate:selection":s[4]||(s[4]=n=>l.value=n)},null,8,["selection"])):i("",!0),((w=l.value)==null?void 0:w.kind)==="state"?(o(),u(e($),{key:1,selection:l.value,"onUpdate:selection":s[5]||(s[5]=n=>l.value=n)},null,8,["selection"])):i("",!0),v(e(G),{selection:l.value,"onUpdate:selection":s[6]||(s[6]=n=>l.value=n)},null,8,["selection"])],2)}}}),Re=I({__name:"FlowRun",setup(C){const m=K(),c=le(),l=M("flowRunId"),{flowRun:a,subscription:d}=Q(l,{interval:5e3}),s=p(()=>{var t;return(t=a.value)==null?void 0:t.deploymentId}),{deployment:_}=W(s),f=p(()=>{var t;return(t=a.value)!=null&&t.stateType?se(a.value.stateType):!0}),w=p(()=>{var t;return te(((t=a.value)==null?void 0:t.jobVariables)??{})}),n=p(()=>[{label:"Logs"},{label:"Task Runs",hidden:f.value},{label:"Subflow Runs",hidden:f.value},{label:"Results",hidden:f.value},{label:"Artifacts",hidden:f.value},{label:"Details"},{label:"Parameters"},{label:"Job Variables",hidden:!m.access.flowRunInfraOverrides}]),b=X("tab","Logs"),{tabs:U}=Y(n,b),j=p(()=>{var t;return((t=a.value)==null?void 0:t.parameters)??{}}),B=p(()=>{var t;return((t=_.value)==null?void 0:t.parameterOpenApiSchema)??{}}),R=p(()=>ne(j.value,B.value)),E=p(()=>[l.value]),{filter:D}=Z({flowRuns:{parentFlowRunId:E}});function N(){c.push(F.flowRuns())}const S=p(()=>{var t;return(t=a.value)==null?void 0:t.stateType});ee(S);const V=p(()=>a.value?`Flow Run: ${a.value.name}`:"Flow Run");return we(V),ae(()=>{d.error&&ve(d.error).isInRange("clientError")&&c.replace(F[404]())}),(t,h)=>{const T=y("p-code-highlight"),A=y("p-tabs"),P=y("p-layout-default");return o(),u(P,{class:"flow-run"},{header:r(()=>[e(a)?(o(),u(e(oe),{key:0,"flow-run-id":e(a).id,onDelete:N},null,8,["flow-run-id"])):i("",!0)]),default:r(()=>[e(a)&&!f.value?(o(),u(ge,{key:0,"flow-run":e(a)},null,8,["flow-run"])):i("",!0),v(A,{selected:e(b),"onUpdate:selected":h[0]||(h[0]=q=>de(b)?b.value=q:null),tabs:e(U)},{details:r(()=>[e(a)?(o(),u(e(ue),{key:0,"flow-run":e(a)},null,8,["flow-run"])):i("",!0)]),logs:r(()=>[e(a)?(o(),u(e(re),{key:0,"flow-run":e(a)},null,8,["flow-run"])):i("",!0)]),results:r(()=>[e(a)?(o(),u(e(ie),{key:0,"flow-run":e(a)},null,8,["flow-run"])):i("",!0)]),artifacts:r(()=>[e(a)?(o(),u(e(pe),{key:0,"flow-run":e(a)},null,8,["flow-run"])):i("",!0)]),"task-runs":r(()=>[e(a)?(o(),u(e(fe),{key:0,"flow-run-id":e(a).id},null,8,["flow-run-id"])):i("",!0)]),"subflow-runs":r(()=>[v(e(ce),{filter:e(D)},null,8,["filter"])]),parameters:r(()=>[e(a)?(o(),u(e(x),{key:0,"text-to-copy":R.value},{default:r(()=>[v(T,{lang:"json",text:R.value,class:"flow-run__parameters"},null,8,["text"])]),_:1},8,["text-to-copy"])):i("",!0)]),"job-variables":r(()=>[e(a)?(o(),u(e(x),{key:0,"text-to-copy":w.value},{default:r(()=>[v(T,{lang:"json",text:w.value,class:"flow-run__job-variables"},null,8,["text"])]),_:1},8,["text-to-copy"])):i("",!0)]),_:1},8,["selected","tabs"])]),_:1})}}});export{Re as default};
//# sourceMappingURL=FlowRun-CLSsTLJM.js.map

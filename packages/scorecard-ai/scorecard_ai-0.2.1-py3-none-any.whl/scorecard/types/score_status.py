# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ScoreStatus(str, enum.Enum):
    PENDING = "pending"
    ERROR = "error"
    COMPLETED = "completed"

    def visit(
        self,
        pending: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
        completed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ScoreStatus.PENDING:
            return pending()
        if self is ScoreStatus.ERROR:
            return error()
        if self is ScoreStatus.COMPLETED:
            return completed()

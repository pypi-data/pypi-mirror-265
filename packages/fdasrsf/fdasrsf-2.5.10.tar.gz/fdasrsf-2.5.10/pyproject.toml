[project]
name = "fdasrsf"
version = "2.5.10"
description = "functional data analysis using the square root slope framework"
authors = [
	{name = "J. Derek Tucker", email = "jdtuck@sandia.gov"}
]
license = {text = "BSD 3-Clause"}
readme = "README.md"
requires-python = ">=3.6"

keywords = ["functional data analysis"]

dependencies=[
        "Cython",
        "matplotlib",
        "numpy",
        "scipy",
        "joblib",
        "patsy",
        "tqdm",
        "six",
        "numba",
        "cffi>=1.0.0",
        "pyparsing",
    ]

classifiers = [
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Mathematics',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6',
]

[project.urls]
homepage = "http://research.tetonedge.net"
repository = "https://github.com/jdtuck/fdasrsf_python"
documentation = "https://fdasrsf-python.readthedocs.io/en/latest/"

[tool.cibuildwheel]
# Note: the below skip command doesn't do much currently, the platforms to
# build wheels for in CI are controlled in `.github/workflows/wheels.yml` and
# `tools/ci/cirrus_wheels.yml`.
skip = "cp36-* cp37-* cp38-* cp312-* pp* *-manylinux_i686 *_ppc64le *_s390x *-win32 *_i686"
build-verbosity = "3"
environment = {BLAS="/usr/local/lib",BLAS_SRC="/usr/local/include"}
before-build = "bash {project}/bin/cibw_before_build.sh {project}"

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
environment = {RUNNER_OS="Linux"}

[tool.cibuildwheel.macos]
# For universal2 wheels, we will need to fuse them manually
# instead of going through cibuildwheel
# This is because cibuildwheel tries to make a fat wheel
# https://github.com/multi-build/multibuild/blame/devel/README.rst#L541-L565
# for more info
archs = "x86_64 arm64"
test-skip = "*_universal2:arm64"
environment = {RUNNER_OS="macOS"}

[tool.cibuildwheel.windows]
environment = {PKG_CONFIG_PATH="C:/opt/64/lib/pkgconfig"}

[[tool.cibuildwheel.overrides]]
select = "*-win32"
environment = {PKG_CONFIG_PATH="/opt/32/lib/pkgconfig"}

[build-system]
requires = ["setuptools>=46.0", "wheel", "cffi>=1.0.0", "Cython", "findblas", "oldest-supported-numpy"]  # PEP 518 - what is required to build
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

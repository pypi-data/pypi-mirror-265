[tool.poetry]
name = "afxdl"
version = "0.1.0"
description = "Download audio from aphextwin.warp.net"
authors = ["eggplants <w10776e8w@yahoo.co.jp>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.3"
pydantic = "^2.6.4"
mutagen = "^1.47.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
taskipy = "^1.12.2"
black = "^24.3.0"
ruff = "^0.3.4"
types-beautifulsoup4 = "^4.12.0.20240229"
types-requests = "^2.31.0.20240311"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.poetry.scripts]
afxdl = "afxdl.main:main"

[tool.black]
line-length = 120
target-version = ['py39']

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D", "ANN101"]

[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.per-file-ignores]
"main.py" = [
  "T201", # `print` found
]
"tests/*test_*.py" = [
  "INP001", # File tests/test_*.py is part of an implicit namespace package. Add an __ini.py.
  "S101",   # Use of assert detected
]

[tool.mypy]
pretty = true
python_version = "3.12"
show_error_codes = true
strict = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
# frozen = true

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"

# [tool.pytype]
# python_version = '3.12'
# jobs = '4'
# report_errors = true
# precise_return = true
# protocols = true
# strict_import = true

[tool.taskipy.tasks]
test = "pytest --cov=afxdl --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"

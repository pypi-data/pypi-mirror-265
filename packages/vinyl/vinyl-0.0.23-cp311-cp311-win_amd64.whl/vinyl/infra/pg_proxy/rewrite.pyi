import sqlglot
import sqlglot.expressions as exp
from typing import Any, Callable, TypeVar

DecoratedCallable = TypeVar('DecoratedCallable', bound=Callable[..., Any])

class Rewriter:
    def __init__(self, read: sqlglot.Dialect, write: sqlglot.Dialect) -> None: ...
    def relation(self, name: str) -> Callable[[DecoratedCallable], DecoratedCallable]: ...
    def rewrite(self, sql: str) -> str: ...
    def rewrite_one(self, expression: exp.Expression) -> exp.Expression: ...

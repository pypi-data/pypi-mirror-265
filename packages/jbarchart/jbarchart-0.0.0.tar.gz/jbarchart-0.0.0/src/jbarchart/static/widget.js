import*as h from"https://cdn.jsdelivr.net/npm/d3@6/+esm";import*as i from"https://cdn.jsdelivr.net/npm/d3@6/+esm";var s=class{constructor(t,n,e){this.data=n,this.parent=t,this.model=e}init(){let t={top:30,right:30,bottom:70,left:60};this.width=this.parent.clientWidth-t.left-t.right,this.height=500-t.top-t.bottom;let n="#"+this.parent.id;this.svg=i.select(n).append("svg").attr("width",this.width+t.left+t.right).attr("height",this.height+t.top+t.bottom).append("g").attr("transform",`translate(${t.left},${t.top})`),this.x=i.scaleBand().range([0,this.width]).padding(.2),this.xAxis=this.svg.append("g").attr("transform",`translate(0,${this.height})`),this.y=i.scaleLinear().range([this.height,0]),this.yAxis=this.svg.append("g").attr("class","myYaxis")}update(t){this.x.domain(this.data.map(e=>e.cell_type)),this.xAxis.transition().duration(1e3).call(i.axisBottom(this.x)),this.y.domain([0,i.max(this.data,e=>+e[t])]),this.yAxis.transition().duration(1e3).call(i.axisLeft(this.y)),this.svg.selectAll("rect").data(this.data).join("rect").transition().duration(1e3).attr("x",e=>this.x(e.cell_type)).attr("y",e=>this.y(e[t])).attr("width",this.x.bandwidth()).attr("height",e=>this.height-this.y(e[t])).attr("fill","#69b3a2"),i.selectAll("rect").on("mouseover",function(e){i.select(this).style("fill","orange")}).on("mouseout",function(e){i.select(this).style("fill","#69b3a2")})}};function l({model:d,el:t}){console.log("rendering the widget 28");let n=document.createElement("div");n.id="my_dataviz";let e=h.csvParse(d.get("data")),a=new s(n,e),r=document.createElement("button");r.innerHTML="outgoing_syn",r.addEventListener("click",()=>{a.update("outgoing_syn")}),t.appendChild(r);let o=document.createElement("button");o.innerHTML="incoming_syn",o.addEventListener("click",()=>{a.update("incoming_syn")}),t.appendChild(o),t.appendChild(n),a.init(),a.update("outgoing_syn")}var f={render:l};export{f as default};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vanMvd2lkZ2V0LmpzIiwgIi4uLy4uLy4uL2pzL2JhcmNoYXJ0LmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgKiBhcyBkMyBmcm9tIFwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9kM0A2Lytlc21cIjtcbmltcG9ydCB7IEJhckNoYXJ0IH0gZnJvbSBcIi4vYmFyY2hhcnQuanNcIjtcbmltcG9ydCBcIi4vd2lkZ2V0LmNzc1wiO1xuXG5mdW5jdGlvbiByZW5kZXIoeyBtb2RlbCwgZWwgfSkge1xuICBjb25zb2xlLmxvZyhcInJlbmRlcmluZyB0aGUgd2lkZ2V0IDI4XCIpO1xuICBsZXQgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZGl2LmlkID0gXCJteV9kYXRhdml6XCI7XG5cbiAgbGV0IGRhdGEgPSBkMy5jc3ZQYXJzZShtb2RlbC5nZXQoXCJkYXRhXCIpKTtcbiAgbGV0IGJhcmNoYXJ0ID0gbmV3IEJhckNoYXJ0KGRpdiwgZGF0YSk7XG5cbiAgbGV0IGJ1dHRvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBidXR0b24xLmlubmVySFRNTCA9IGBvdXRnb2luZ19zeW5gO1xuICBidXR0b24xLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgYmFyY2hhcnQudXBkYXRlKFwib3V0Z29pbmdfc3luXCIpO1xuICB9KTtcbiAgZWwuYXBwZW5kQ2hpbGQoYnV0dG9uMSk7XG5cbiAgbGV0IGJ1dHRvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBidXR0b24yLmlubmVySFRNTCA9IGBpbmNvbWluZ19zeW5gO1xuICBidXR0b24yLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgYmFyY2hhcnQudXBkYXRlKFwiaW5jb21pbmdfc3luXCIpO1xuICB9KTtcbiAgZWwuYXBwZW5kQ2hpbGQoYnV0dG9uMik7XG5cbiAgZWwuYXBwZW5kQ2hpbGQoZGl2KTtcblxuICBiYXJjaGFydC5pbml0KCk7XG4gIGJhcmNoYXJ0LnVwZGF0ZShcIm91dGdvaW5nX3N5blwiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgeyByZW5kZXIgfTtcbiIsICJpbXBvcnQgKiBhcyBkMyBmcm9tIFwiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9kM0A2Lytlc21cIjtcblxuZXhwb3J0IGNsYXNzIEJhckNoYXJ0IHtcbiAgY29uc3RydWN0b3IocGFyZW50LCBkYXRhLCBtb2RlbCkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgdGhpcy5tb2RlbCA9IG1vZGVsO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICAvLyBjb25zb2xlLmxvZygnaW5pdGlhbGl6ZSB0aGUgY2hhcnQnKTtcblxuICAgIC8vIHNldCB0aGUgZGltZW5zaW9ucyBhbmQgbWFyZ2lucyBvZiB0aGUgZ3JhcGhcbiAgICBjb25zdCBtYXJnaW4gPSB7IHRvcDogMzAsIHJpZ2h0OiAzMCwgYm90dG9tOiA3MCwgbGVmdDogNjAgfTtcbiAgICB0aGlzLndpZHRoID0gdGhpcy5wYXJlbnQuY2xpZW50V2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodDtcbiAgICB0aGlzLmhlaWdodCA9IDUwMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tO1xuXG4gICAgbGV0IHBhcmVudFRhZyA9IFwiI1wiICsgdGhpcy5wYXJlbnQuaWQ7XG4gICAgdGhpcy5zdmcgPSBkM1xuICAgICAgLnNlbGVjdChwYXJlbnRUYWcpXG4gICAgICAuYXBwZW5kKFwic3ZnXCIpXG4gICAgICAuYXR0cihcIndpZHRoXCIsIHRoaXMud2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodClcbiAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIHRoaXMuaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pXG4gICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgke21hcmdpbi5sZWZ0fSwke21hcmdpbi50b3B9KWApO1xuXG4gICAgdGhpcy54ID0gZDMuc2NhbGVCYW5kKCkucmFuZ2UoWzAsIHRoaXMud2lkdGhdKS5wYWRkaW5nKDAuMik7XG4gICAgdGhpcy54QXhpcyA9IHRoaXMuc3ZnXG4gICAgICAuYXBwZW5kKFwiZ1wiKVxuICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgYHRyYW5zbGF0ZSgwLCR7dGhpcy5oZWlnaHR9KWApO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgWSBheGlzXG4gICAgdGhpcy55ID0gZDMuc2NhbGVMaW5lYXIoKS5yYW5nZShbdGhpcy5oZWlnaHQsIDBdKTtcbiAgICB0aGlzLnlBeGlzID0gdGhpcy5zdmcuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJteVlheGlzXCIpO1xuICB9XG5cbiAgdXBkYXRlKHZhcmlhYmxlTmFtZSkge1xuICAgIHRoaXMueC5kb21haW4odGhpcy5kYXRhLm1hcCgoZCkgPT4gZC5jZWxsX3R5cGUpKTtcbiAgICB0aGlzLnhBeGlzLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5jYWxsKGQzLmF4aXNCb3R0b20odGhpcy54KSk7XG5cbiAgICAvLyB1cGRhdGUgdGhlIGNoYXJ0XG4gICAgdGhpcy55LmRvbWFpbihbMCwgZDMubWF4KHRoaXMuZGF0YSwgKGQpID0+ICtkW3ZhcmlhYmxlTmFtZV0pXSk7XG4gICAgdGhpcy55QXhpcy50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuY2FsbChkMy5heGlzTGVmdCh0aGlzLnkpKTtcblxuICAgIGNvbnN0IHUgPSB0aGlzLnN2Zy5zZWxlY3RBbGwoXCJyZWN0XCIpLmRhdGEodGhpcy5kYXRhKTtcblxuICAgIC8vIHVwZGF0ZSBiYXJzXG4gICAgdS5qb2luKFwicmVjdFwiKVxuICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgLmR1cmF0aW9uKDEwMDApXG4gICAgICAuYXR0cihcInhcIiwgKGQpID0+IHRoaXMueChkLmNlbGxfdHlwZSkpXG4gICAgICAuYXR0cihcInlcIiwgKGQpID0+IHRoaXMueShkW3ZhcmlhYmxlTmFtZV0pKVxuICAgICAgLmF0dHIoXCJ3aWR0aFwiLCB0aGlzLnguYmFuZHdpZHRoKCkpXG4gICAgICAuYXR0cihcImhlaWdodFwiLCAoZCkgPT4gdGhpcy5oZWlnaHQgLSB0aGlzLnkoZFt2YXJpYWJsZU5hbWVdKSlcbiAgICAgIC5hdHRyKFwiZmlsbFwiLCBcIiM2OWIzYTJcIik7XG5cbiAgICBkMy5zZWxlY3RBbGwoXCJyZWN0XCIpXG4gICAgICAub24oXCJtb3VzZW92ZXJcIiwgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgZDMuc2VsZWN0KHRoaXMpLnN0eWxlKFwiZmlsbFwiLCBcIm9yYW5nZVwiKTtcbiAgICAgIH0pXG4gICAgICAub24oXCJtb3VzZW91dFwiLCBmdW5jdGlvbiAoZCkge1xuICAgICAgICBkMy5zZWxlY3QodGhpcykuc3R5bGUoXCJmaWxsXCIsIFwiIzY5YjNhMlwiKTsgLy8gQXNzdW1lICdzdGVlbGJsdWUnIGlzIHRoZSBvcmlnaW5hbCBjb2xvclxuICAgICAgfSk7XG4gIH1cbn1cbiJdLAogICJtYXBwaW5ncyI6ICJBQUFBLFVBQVlBLE1BQVEseUNDQXBCLFVBQVlDLE1BQVEseUNBRWIsSUFBTUMsRUFBTixLQUFlLENBQ3BCLFlBQVlDLEVBQVFDLEVBQU1DLEVBQU8sQ0FDL0IsS0FBSyxLQUFPRCxFQUNaLEtBQUssT0FBU0QsRUFDZCxLQUFLLE1BQVFFLENBQ2YsQ0FFQSxNQUFPLENBSUwsSUFBTUMsRUFBUyxDQUFFLElBQUssR0FBSSxNQUFPLEdBQUksT0FBUSxHQUFJLEtBQU0sRUFBRyxFQUMxRCxLQUFLLE1BQVEsS0FBSyxPQUFPLFlBQWNBLEVBQU8sS0FBT0EsRUFBTyxNQUM1RCxLQUFLLE9BQVMsSUFBTUEsRUFBTyxJQUFNQSxFQUFPLE9BRXhDLElBQUlDLEVBQVksSUFBTSxLQUFLLE9BQU8sR0FDbEMsS0FBSyxJQUNGLFNBQU9BLENBQVMsRUFDaEIsT0FBTyxLQUFLLEVBQ1osS0FBSyxRQUFTLEtBQUssTUFBUUQsRUFBTyxLQUFPQSxFQUFPLEtBQUssRUFDckQsS0FBSyxTQUFVLEtBQUssT0FBU0EsRUFBTyxJQUFNQSxFQUFPLE1BQU0sRUFDdkQsT0FBTyxHQUFHLEVBQ1YsS0FBSyxZQUFhLGFBQWFBLEVBQU8sSUFBSSxJQUFJQSxFQUFPLEdBQUcsR0FBRyxFQUU5RCxLQUFLLEVBQU8sWUFBVSxFQUFFLE1BQU0sQ0FBQyxFQUFHLEtBQUssS0FBSyxDQUFDLEVBQUUsUUFBUSxFQUFHLEVBQzFELEtBQUssTUFBUSxLQUFLLElBQ2YsT0FBTyxHQUFHLEVBQ1YsS0FBSyxZQUFhLGVBQWUsS0FBSyxNQUFNLEdBQUcsRUFHbEQsS0FBSyxFQUFPLGNBQVksRUFBRSxNQUFNLENBQUMsS0FBSyxPQUFRLENBQUMsQ0FBQyxFQUNoRCxLQUFLLE1BQVEsS0FBSyxJQUFJLE9BQU8sR0FBRyxFQUFFLEtBQUssUUFBUyxTQUFTLENBQzNELENBRUEsT0FBT0UsRUFBYyxDQUNuQixLQUFLLEVBQUUsT0FBTyxLQUFLLEtBQUssSUFBS0MsR0FBTUEsRUFBRSxTQUFTLENBQUMsRUFDL0MsS0FBSyxNQUFNLFdBQVcsRUFBRSxTQUFTLEdBQUksRUFBRSxLQUFRLGFBQVcsS0FBSyxDQUFDLENBQUMsRUFHakUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxFQUFNLE1BQUksS0FBSyxLQUFPQSxHQUFNLENBQUNBLEVBQUVELENBQVksQ0FBQyxDQUFDLENBQUMsRUFDN0QsS0FBSyxNQUFNLFdBQVcsRUFBRSxTQUFTLEdBQUksRUFBRSxLQUFRLFdBQVMsS0FBSyxDQUFDLENBQUMsRUFFckQsS0FBSyxJQUFJLFVBQVUsTUFBTSxFQUFFLEtBQUssS0FBSyxJQUFJLEVBR2pELEtBQUssTUFBTSxFQUNWLFdBQVcsRUFDWCxTQUFTLEdBQUksRUFDYixLQUFLLElBQU1DLEdBQU0sS0FBSyxFQUFFQSxFQUFFLFNBQVMsQ0FBQyxFQUNwQyxLQUFLLElBQU1BLEdBQU0sS0FBSyxFQUFFQSxFQUFFRCxDQUFZLENBQUMsQ0FBQyxFQUN4QyxLQUFLLFFBQVMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxFQUNoQyxLQUFLLFNBQVdDLEdBQU0sS0FBSyxPQUFTLEtBQUssRUFBRUEsRUFBRUQsQ0FBWSxDQUFDLENBQUMsRUFDM0QsS0FBSyxPQUFRLFNBQVMsRUFFdEIsWUFBVSxNQUFNLEVBQ2hCLEdBQUcsWUFBYSxTQUFVQyxFQUFHLENBQ3pCLFNBQU8sSUFBSSxFQUFFLE1BQU0sT0FBUSxRQUFRLENBQ3hDLENBQUMsRUFDQSxHQUFHLFdBQVksU0FBVUEsRUFBRyxDQUN4QixTQUFPLElBQUksRUFBRSxNQUFNLE9BQVEsU0FBUyxDQUN6QyxDQUFDLENBQ0wsQ0FDRixFRDVEQSxTQUFTQyxFQUFPLENBQUUsTUFBQUMsRUFBTyxHQUFBQyxDQUFHLEVBQUcsQ0FDN0IsUUFBUSxJQUFJLHlCQUF5QixFQUNyQyxJQUFJQyxFQUFNLFNBQVMsY0FBYyxLQUFLLEVBQ3RDQSxFQUFJLEdBQUssYUFFVCxJQUFJQyxFQUFVLFdBQVNILEVBQU0sSUFBSSxNQUFNLENBQUMsRUFDcENJLEVBQVcsSUFBSUMsRUFBU0gsRUFBS0MsQ0FBSSxFQUVqQ0csRUFBVSxTQUFTLGNBQWMsUUFBUSxFQUM3Q0EsRUFBUSxVQUFZLGVBQ3BCQSxFQUFRLGlCQUFpQixRQUFTLElBQU0sQ0FDdENGLEVBQVMsT0FBTyxjQUFjLENBQ2hDLENBQUMsRUFDREgsRUFBRyxZQUFZSyxDQUFPLEVBRXRCLElBQUlDLEVBQVUsU0FBUyxjQUFjLFFBQVEsRUFDN0NBLEVBQVEsVUFBWSxlQUNwQkEsRUFBUSxpQkFBaUIsUUFBUyxJQUFNLENBQ3RDSCxFQUFTLE9BQU8sY0FBYyxDQUNoQyxDQUFDLEVBQ0RILEVBQUcsWUFBWU0sQ0FBTyxFQUV0Qk4sRUFBRyxZQUFZQyxDQUFHLEVBRWxCRSxFQUFTLEtBQUssRUFDZEEsRUFBUyxPQUFPLGNBQWMsQ0FDaEMsQ0FFQSxJQUFPSSxFQUFRLENBQUUsT0FBQVQsQ0FBTyIsCiAgIm5hbWVzIjogWyJkMyIsICJkMyIsICJCYXJDaGFydCIsICJwYXJlbnQiLCAiZGF0YSIsICJtb2RlbCIsICJtYXJnaW4iLCAicGFyZW50VGFnIiwgInZhcmlhYmxlTmFtZSIsICJkIiwgInJlbmRlciIsICJtb2RlbCIsICJlbCIsICJkaXYiLCAiZGF0YSIsICJiYXJjaGFydCIsICJCYXJDaGFydCIsICJidXR0b24xIiwgImJ1dHRvbjIiLCAid2lkZ2V0X2RlZmF1bHQiXQp9Cg==

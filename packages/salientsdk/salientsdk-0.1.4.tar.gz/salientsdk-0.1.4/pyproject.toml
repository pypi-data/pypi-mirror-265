[tool.poetry]
name = "salientsdk"
version = "0.1.4"
description = "Salient Predictions Software Development Kit"
authors = ["Salient Predictions <help@salientpredictions.com>"]
license = "docs/LICENSE.md"
readme = "docs/index.md"
keywords = ["weather","climate","forecasting","sdk","salient","s2s"]
homepage = "https://salientpredictions.com"
documentation = "https://sdk.salientpredictions.com"
repository = "https://github.com/Salient-Predictions/salientsdk"

[tool.poetry.dependencies]
# use "poetry add <packagename>" to edit this list
h5netcdf = "^1.3.0"
netCDF4 = "^1.6.5"
pandas = "^2.2.1"
python = "^3.11"
requests = "^2.31.0"
toml = "^0.10.2"
xarray = "^2024.2.0"

[tool.poetry.group.dev.dependencies]
# use "poetry add --dev <packagename>" to edit this list
google = "^3.0.0"
google-cloud-secret-manager = "^2.19.0"
markdown-include = "^0.8.1"
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.15"
mkdocs-jupyter = "^0.24.6"
mkdocs-glightbox = "^0.3.7"
mkdocstrings = "^0.24.1"
mkdocstrings-python = "^1.9.0"
nbmake = "^1.5.3"
pydoc-markdown = "^4.8.2"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
ruff = "^0.3.4"

[build-system]
# poetry build
# -- to publish to test pypi --
# poetry config repositories.testpypi https://test.pypi.org/legacy/
# poetry config pypi-token.testpypi <your-test-pypi-token>
# poetry publish -r testpypi
# pip install --index-url https://test.pypi.org/simple/ salientsdk
# -- to publish to the canonical pypi --
# poetry config pypi-token.pypi <your-pypi-token>
# poetry publish
# pip install salientsdk
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
exclude = ""

# Make sure that isort and black play nicely together
# (both are part of our precommit)
[tool.isort]
profile = "black"

# These are the ruff settings that are explicitly supplied to pre-commit for enforcement
[tool.ruff]
# Should match black
line-length = 99
# Assume Python 3.9
target-version = "py39"

# Currently enforce:
# C90=mccabe-complexity
# E722=do not use base except
# Eventually add: F=pyflakes, E=pycodestyle, I=isort, W=pycodestyle warnings, N=pep8-naming, D=pydocstyle
select = ["C90", "E722","D"]
ignore = []

[tool.ruff.mccabe]
max-complexity = 25

[tool.ruff.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
filterwarnings = [
   "ignore::DeprecationWarning"
]




#[project]
#name = "salientsdk"
#version = "0.1.2"
#dynamic = ["dependencies"]
#license = {file = "docs/LICENSE.md"}
#readme = "docs/index.md"
#description="Salient Predictions Software Development Kit"
#requires-python=">=3.11"
#keywords = ["weather","climate","forecasting","sdk","salient","s2s"]
#authors = [
#  {name = "Salient Predictions", email = "help@salientpredictions.com"}
#]
#classifiers=[
#   "Development Status :: 1 - Planning",
#   "Programming Language :: Python",
#]

# to deploy & install with twine, replace build-system-twine with build-system
# python3 -m build
# python3 -m twine upload --repository testpypi dist/* --skip-existing
# pip install --upgrade -i https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ salientsdk
#[build-system]
#requires = ["setuptools>=61.0","wheel","toml"]
#build-backend = "setuptools.build_meta"

name: Build and upload to PyPI

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build sdist for am4utils
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build sdist
      working-directory: ./
      run: pipx run build --sdist

    - name: Store artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels for py${{ matrix.python }}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: 39
            platform_id: "manylinux_x86_64"
            manylinux_image: 
          - os: ubuntu-latest
            python: 310
            platform_id: "manylinux_x86_64"
          - os: ubuntu-latest
            python: 311
            platform_id: "manylinux_x86_64"

          - os: macos-latest
            python: 39
            platform_id: "macosx_x86_64"
          - os: macos-latest
            python: 310
            platform_id: "macosx_x86_64"
          - os: macos-latest
            python: 311
            platform_id: "macosx_x86_64"
          - os: macos-latest
            python: 39
            platform_id: "macosx_arm64"
          - os: macos-latest
            python: 310
            platform_id: "macosx_arm64"
          - os: macos-latest
            python: 311
            platform_id: "macosx_arm64"
    steps:
      - uses: actions/checkout@v3

      - name: build and test wheels
        working-directory: ./
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux_2_28_x86_64"
          CIBW_ARCHS: all
          CIBW_TEST_SKIP: "*"
          MACOSX_DEPLOYMENT_TARGET: 10.15
        run: pipx run cibuildwheel --output-dir wheelhouse
        
      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
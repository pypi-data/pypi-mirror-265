from __future__ import annotations
import datetime
__all__ = ['AllianceLog', 'UserLog']
class AllianceLog:
    class Member:
        def __init__(self, id: int, username: str, joined: datetime.datetime, flights: int, contributed: int, daily_contribution: int, online: datetime.datetime, sv: float, season: int) -> None:
            ...
        @property
        def contributed(self) -> int:
            ...
        @property
        def daily_contribution(self) -> int:
            ...
        @property
        def flights(self) -> int:
            ...
        @property
        def id(self) -> int:
            ...
        @property
        def joined(self) -> datetime.datetime:
            ...
        @property
        def online(self) -> datetime.datetime:
            ...
        @property
        def season(self) -> int:
            ...
        @property
        def sv(self) -> float:
            ...
        @property
        def username(self) -> str:
            ...
    def __init__(self, id: int, name: str, rank: int, member_count: int, max_members: int, value: float, ipo: bool, min_sv: float, members: list[AllianceLog.Member]) -> None:
        ...
    @property
    def id(self) -> int:
        ...
    @property
    def ipo(self) -> bool:
        ...
    @property
    def log_id(self) -> str:
        ...
    @property
    def log_time(self) -> datetime.datetime:
        ...
    @property
    def max_members(self) -> int:
        ...
    @property
    def member_count(self) -> int:
        ...
    @property
    def members(self) -> list[AllianceLog.Member]:
        ...
    @property
    def min_sv(self) -> float:
        ...
    @property
    def name(self) -> str:
        ...
    @property
    def rank(self) -> int:
        ...
    @property
    def value(self) -> float:
        ...
class UserLog:
    class AircraftCount:
        @property
        def aircraft(self) -> str:
            ...
        @property
        def amount(self) -> int:
            ...
    class Award:
        def __init__(self, ts: datetime.datetime, award: str) -> None:
            ...
        @property
        def award(self) -> str:
            ...
        @property
        def ts(self) -> datetime.datetime:
            ...
    class RouteDetail:
        @property
        def arrived(self) -> datetime.datetime:
            ...
        @property
        def destination(self) -> str:
            ...
        @property
        def distance(self) -> int:
            ...
        @property
        def origin(self) -> str:
            ...
        @property
        def stopover(self) -> str:
            ...
    class Share:
        def __init__(self, ts: datetime.datetime, share: float) -> None:
            ...
        @property
        def share(self) -> float:
            ...
        @property
        def ts(self) -> datetime.datetime:
            ...
    def __init__(self, id: int, username: str, level: int, online: bool, share: float, shares_available: int, shares_sold: int, ipo: bool, fleet_count: int, routes: int, alliance: str, achievements: int, game_mode: bool, rank: int, reputation: int, cargo_reputation: int, founded: datetime.datetime, logo: str, share_log: list[UserLog.Share], awards: list[UserLog.Award], fleet: list[UserLog.AircraftCount], route_list: list[UserLog.RouteDetail]) -> None:
        ...
    @property
    def achievements(self) -> int:
        ...
    @property
    def alliance(self) -> str:
        ...
    @property
    def awards(self) -> list[UserLog.Award]:
        ...
    @property
    def cargo_reputation(self) -> int:
        ...
    @property
    def fleet(self) -> list[UserLog.AircraftCount]:
        ...
    @property
    def fleet_count(self) -> int:
        ...
    @property
    def founded(self) -> datetime.datetime:
        ...
    @property
    def game_mode(self) -> bool:
        ...
    @property
    def ipo(self) -> bool:
        ...
    @property
    def level(self) -> int:
        ...
    @property
    def log_id(self) -> str:
        ...
    @property
    def log_time(self) -> datetime.datetime:
        ...
    @property
    def logo(self) -> str:
        ...
    @property
    def online(self) -> bool:
        ...
    @property
    def rank(self) -> int:
        ...
    @property
    def reputation(self) -> int:
        ...
    @property
    def route_list(self) -> list[UserLog.RouteDetail]:
        ...
    @property
    def routes(self) -> int:
        ...
    @property
    def share(self) -> float:
        ...
    @property
    def share_log(self) -> list[UserLog.Share]:
        ...
    @property
    def shares_available(self) -> int:
        ...
    @property
    def shares_sold(self) -> int:
        ...
    @property
    def username(self) -> str:
        ...

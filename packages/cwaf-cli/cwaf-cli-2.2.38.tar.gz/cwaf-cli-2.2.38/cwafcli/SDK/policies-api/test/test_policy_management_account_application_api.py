# coding: utf-8

"""
    Imperva Policy Management

    Create policies to centrally configure settings and apply them to multiple websites in your account. For full feature documentation, see <a style=\"text-decoration:none\" href=\"https://docs.imperva.com/csh?context=policies\">Create and Manage Policies</a>.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.policy_management_account_application_api import PolicyManagementAccountApplicationApi  # noqa: E501
from swagger_client.rest import ApiException


class TestPolicyManagementAccountApplicationApi(unittest.TestCase):
    """PolicyManagementAccountApplicationApi unit test stubs"""

    def setUp(self):
        self.api = PolicyManagementAccountApplicationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_available_account_to_policy(self):
        """Test case for add_available_account_to_policy

        Enables an account to access a policy  # noqa: E501
        """
        pass

    def test_get_account_policy_association(self):
        """Test case for get_account_policy_association

        Retrieve the list of default and available policies of the account  # noqa: E501
        """
        pass

    def test_get_all_available_accounts_of_policy(self):
        """Test case for get_all_available_accounts_of_policy

        Retrieves the list of accounts that can access a policy  # noqa: E501
        """
        pass

    def test_patch_account_policy_association(self):
        """Test case for patch_account_policy_association

        Update the list of default and available policies of the account  # noqa: E501
        """
        pass

    def test_put_account_policy_association(self):
        """Test case for put_account_policy_association

        Set the list of default and available policies of the account (full overwrite)  # noqa: E501
        """
        pass

    def test_remove_available_account_from_policy(self):
        """Test case for remove_available_account_from_policy

        Removes access to a policy by an account  # noqa: E501
        """
        pass

    def test_set_available_account_to_policy(self):
        """Test case for set_available_account_to_policy

        Defines the list of accounts that can access a policy  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    Imperva Advanced API Security

    This topic describes the API for Imperva Advanced API Security. For full feature documentation, see [Imperva API Security](https://docs.imperva.com/bundle/api-security/page/72248.htm).  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SiteDiscoverySettings(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'site_id': 'int',
        'account_id': 'int',
        'site_name': 'str',
        'last_modified': 'int',
        'last_modified_user': 'str',
        'related_hosts': 'list[Host]',
        'is_discovery_enabled': 'bool',
        'discovery_exclude_paths': 'list[str]',
        'discovery_include_only_paths': 'list[str]',
        'is_automatic_discovery_api_integration_enabled': 'bool',
        'authentication_enabled': 'bool',
        'auth_parameter_settings': 'list[AuthParameterSettings]',
        'excessive_data_exposure_settings': 'ExcessiveDataExposureSettings',
        'deprecated_api_settings': 'DeprecatedApiSettings',
        'endpoint_settings': 'list[EndpointSettingsDto]'
    }

    attribute_map = {
        'site_id': 'siteId',
        'account_id': 'accountId',
        'site_name': 'siteName',
        'last_modified': 'lastModified',
        'last_modified_user': 'lastModifiedUser',
        'related_hosts': 'relatedHosts',
        'is_discovery_enabled': 'isDiscoveryEnabled',
        'discovery_exclude_paths': 'discoveryExcludePaths',
        'discovery_include_only_paths': 'discoveryIncludeOnlyPaths',
        'is_automatic_discovery_api_integration_enabled': 'isAutomaticDiscoveryApiIntegrationEnabled',
        'authentication_enabled': 'authenticationEnabled',
        'auth_parameter_settings': 'authParameterSettings',
        'excessive_data_exposure_settings': 'excessiveDataExposureSettings',
        'deprecated_api_settings': 'deprecatedApiSettings',
        'endpoint_settings': 'endpointSettings'
    }

    def __init__(self, site_id=None, account_id=None, site_name=None, last_modified=None, last_modified_user=None, related_hosts=None, is_discovery_enabled=None, discovery_exclude_paths=None, discovery_include_only_paths=None, is_automatic_discovery_api_integration_enabled=None, authentication_enabled=None, auth_parameter_settings=None, excessive_data_exposure_settings=None, deprecated_api_settings=None, endpoint_settings=None):  # noqa: E501
        """SiteDiscoverySettings - a model defined in Swagger"""  # noqa: E501
        self._site_id = None
        self._account_id = None
        self._site_name = None
        self._last_modified = None
        self._last_modified_user = None
        self._related_hosts = None
        self._is_discovery_enabled = None
        self._discovery_exclude_paths = None
        self._discovery_include_only_paths = None
        self._is_automatic_discovery_api_integration_enabled = None
        self._authentication_enabled = None
        self._auth_parameter_settings = None
        self._excessive_data_exposure_settings = None
        self._deprecated_api_settings = None
        self._endpoint_settings = None
        self.discriminator = None
        if site_id is not None:
            self.site_id = site_id
        if account_id is not None:
            self.account_id = account_id
        if site_name is not None:
            self.site_name = site_name
        if last_modified is not None:
            self.last_modified = last_modified
        if last_modified_user is not None:
            self.last_modified_user = last_modified_user
        if related_hosts is not None:
            self.related_hosts = related_hosts
        if is_discovery_enabled is not None:
            self.is_discovery_enabled = is_discovery_enabled
        if discovery_exclude_paths is not None:
            self.discovery_exclude_paths = discovery_exclude_paths
        if discovery_include_only_paths is not None:
            self.discovery_include_only_paths = discovery_include_only_paths
        if is_automatic_discovery_api_integration_enabled is not None:
            self.is_automatic_discovery_api_integration_enabled = is_automatic_discovery_api_integration_enabled
        if authentication_enabled is not None:
            self.authentication_enabled = authentication_enabled
        if auth_parameter_settings is not None:
            self.auth_parameter_settings = auth_parameter_settings
        if excessive_data_exposure_settings is not None:
            self.excessive_data_exposure_settings = excessive_data_exposure_settings
        if deprecated_api_settings is not None:
            self.deprecated_api_settings = deprecated_api_settings
        if endpoint_settings is not None:
            self.endpoint_settings = endpoint_settings

    @property
    def site_id(self):
        """Gets the site_id of this SiteDiscoverySettings.  # noqa: E501

        The site ID  # noqa: E501

        :return: The site_id of this SiteDiscoverySettings.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this SiteDiscoverySettings.

        The site ID  # noqa: E501

        :param site_id: The site_id of this SiteDiscoverySettings.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def account_id(self):
        """Gets the account_id of this SiteDiscoverySettings.  # noqa: E501

        The account ID  # noqa: E501

        :return: The account_id of this SiteDiscoverySettings.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SiteDiscoverySettings.

        The account ID  # noqa: E501

        :param account_id: The account_id of this SiteDiscoverySettings.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def site_name(self):
        """Gets the site_name of this SiteDiscoverySettings.  # noqa: E501

        The site name  # noqa: E501

        :return: The site_name of this SiteDiscoverySettings.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this SiteDiscoverySettings.

        The site name  # noqa: E501

        :param site_name: The site_name of this SiteDiscoverySettings.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def last_modified(self):
        """Gets the last_modified of this SiteDiscoverySettings.  # noqa: E501

        The last modified timestamp  # noqa: E501

        :return: The last_modified of this SiteDiscoverySettings.  # noqa: E501
        :rtype: int
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this SiteDiscoverySettings.

        The last modified timestamp  # noqa: E501

        :param last_modified: The last_modified of this SiteDiscoverySettings.  # noqa: E501
        :type: int
        """

        self._last_modified = last_modified

    @property
    def last_modified_user(self):
        """Gets the last_modified_user of this SiteDiscoverySettings.  # noqa: E501

        The last modified user  # noqa: E501

        :return: The last_modified_user of this SiteDiscoverySettings.  # noqa: E501
        :rtype: str
        """
        return self._last_modified_user

    @last_modified_user.setter
    def last_modified_user(self, last_modified_user):
        """Sets the last_modified_user of this SiteDiscoverySettings.

        The last modified user  # noqa: E501

        :param last_modified_user: The last_modified_user of this SiteDiscoverySettings.  # noqa: E501
        :type: str
        """

        self._last_modified_user = last_modified_user

    @property
    def related_hosts(self):
        """Gets the related_hosts of this SiteDiscoverySettings.  # noqa: E501


        :return: The related_hosts of this SiteDiscoverySettings.  # noqa: E501
        :rtype: list[Host]
        """
        return self._related_hosts

    @related_hosts.setter
    def related_hosts(self, related_hosts):
        """Sets the related_hosts of this SiteDiscoverySettings.


        :param related_hosts: The related_hosts of this SiteDiscoverySettings.  # noqa: E501
        :type: list[Host]
        """

        self._related_hosts = related_hosts

    @property
    def is_discovery_enabled(self):
        """Gets the is_discovery_enabled of this SiteDiscoverySettings.  # noqa: E501


        :return: The is_discovery_enabled of this SiteDiscoverySettings.  # noqa: E501
        :rtype: bool
        """
        return self._is_discovery_enabled

    @is_discovery_enabled.setter
    def is_discovery_enabled(self, is_discovery_enabled):
        """Sets the is_discovery_enabled of this SiteDiscoverySettings.


        :param is_discovery_enabled: The is_discovery_enabled of this SiteDiscoverySettings.  # noqa: E501
        :type: bool
        """

        self._is_discovery_enabled = is_discovery_enabled

    @property
    def discovery_exclude_paths(self):
        """Gets the discovery_exclude_paths of this SiteDiscoverySettings.  # noqa: E501

        Exclude discovery from these specific base paths  # noqa: E501

        :return: The discovery_exclude_paths of this SiteDiscoverySettings.  # noqa: E501
        :rtype: list[str]
        """
        return self._discovery_exclude_paths

    @discovery_exclude_paths.setter
    def discovery_exclude_paths(self, discovery_exclude_paths):
        """Sets the discovery_exclude_paths of this SiteDiscoverySettings.

        Exclude discovery from these specific base paths  # noqa: E501

        :param discovery_exclude_paths: The discovery_exclude_paths of this SiteDiscoverySettings.  # noqa: E501
        :type: list[str]
        """

        self._discovery_exclude_paths = discovery_exclude_paths

    @property
    def discovery_include_only_paths(self):
        """Gets the discovery_include_only_paths of this SiteDiscoverySettings.  # noqa: E501

        Set discovery for these specific base paths only  # noqa: E501

        :return: The discovery_include_only_paths of this SiteDiscoverySettings.  # noqa: E501
        :rtype: list[str]
        """
        return self._discovery_include_only_paths

    @discovery_include_only_paths.setter
    def discovery_include_only_paths(self, discovery_include_only_paths):
        """Sets the discovery_include_only_paths of this SiteDiscoverySettings.

        Set discovery for these specific base paths only  # noqa: E501

        :param discovery_include_only_paths: The discovery_include_only_paths of this SiteDiscoverySettings.  # noqa: E501
        :type: list[str]
        """

        self._discovery_include_only_paths = discovery_include_only_paths

    @property
    def is_automatic_discovery_api_integration_enabled(self):
        """Gets the is_automatic_discovery_api_integration_enabled of this SiteDiscoverySettings.  # noqa: E501


        :return: The is_automatic_discovery_api_integration_enabled of this SiteDiscoverySettings.  # noqa: E501
        :rtype: bool
        """
        return self._is_automatic_discovery_api_integration_enabled

    @is_automatic_discovery_api_integration_enabled.setter
    def is_automatic_discovery_api_integration_enabled(self, is_automatic_discovery_api_integration_enabled):
        """Sets the is_automatic_discovery_api_integration_enabled of this SiteDiscoverySettings.


        :param is_automatic_discovery_api_integration_enabled: The is_automatic_discovery_api_integration_enabled of this SiteDiscoverySettings.  # noqa: E501
        :type: bool
        """

        self._is_automatic_discovery_api_integration_enabled = is_automatic_discovery_api_integration_enabled

    @property
    def authentication_enabled(self):
        """Gets the authentication_enabled of this SiteDiscoverySettings.  # noqa: E501


        :return: The authentication_enabled of this SiteDiscoverySettings.  # noqa: E501
        :rtype: bool
        """
        return self._authentication_enabled

    @authentication_enabled.setter
    def authentication_enabled(self, authentication_enabled):
        """Sets the authentication_enabled of this SiteDiscoverySettings.


        :param authentication_enabled: The authentication_enabled of this SiteDiscoverySettings.  # noqa: E501
        :type: bool
        """

        self._authentication_enabled = authentication_enabled

    @property
    def auth_parameter_settings(self):
        """Gets the auth_parameter_settings of this SiteDiscoverySettings.  # noqa: E501

        Authentication location settings  # noqa: E501

        :return: The auth_parameter_settings of this SiteDiscoverySettings.  # noqa: E501
        :rtype: list[AuthParameterSettings]
        """
        return self._auth_parameter_settings

    @auth_parameter_settings.setter
    def auth_parameter_settings(self, auth_parameter_settings):
        """Sets the auth_parameter_settings of this SiteDiscoverySettings.

        Authentication location settings  # noqa: E501

        :param auth_parameter_settings: The auth_parameter_settings of this SiteDiscoverySettings.  # noqa: E501
        :type: list[AuthParameterSettings]
        """

        self._auth_parameter_settings = auth_parameter_settings

    @property
    def excessive_data_exposure_settings(self):
        """Gets the excessive_data_exposure_settings of this SiteDiscoverySettings.  # noqa: E501


        :return: The excessive_data_exposure_settings of this SiteDiscoverySettings.  # noqa: E501
        :rtype: ExcessiveDataExposureSettings
        """
        return self._excessive_data_exposure_settings

    @excessive_data_exposure_settings.setter
    def excessive_data_exposure_settings(self, excessive_data_exposure_settings):
        """Sets the excessive_data_exposure_settings of this SiteDiscoverySettings.


        :param excessive_data_exposure_settings: The excessive_data_exposure_settings of this SiteDiscoverySettings.  # noqa: E501
        :type: ExcessiveDataExposureSettings
        """

        self._excessive_data_exposure_settings = excessive_data_exposure_settings

    @property
    def deprecated_api_settings(self):
        """Gets the deprecated_api_settings of this SiteDiscoverySettings.  # noqa: E501


        :return: The deprecated_api_settings of this SiteDiscoverySettings.  # noqa: E501
        :rtype: DeprecatedApiSettings
        """
        return self._deprecated_api_settings

    @deprecated_api_settings.setter
    def deprecated_api_settings(self, deprecated_api_settings):
        """Sets the deprecated_api_settings of this SiteDiscoverySettings.


        :param deprecated_api_settings: The deprecated_api_settings of this SiteDiscoverySettings.  # noqa: E501
        :type: DeprecatedApiSettings
        """

        self._deprecated_api_settings = deprecated_api_settings

    @property
    def endpoint_settings(self):
        """Gets the endpoint_settings of this SiteDiscoverySettings.  # noqa: E501

        Enable or disable endpoint exceptions  # noqa: E501

        :return: The endpoint_settings of this SiteDiscoverySettings.  # noqa: E501
        :rtype: list[EndpointSettingsDto]
        """
        return self._endpoint_settings

    @endpoint_settings.setter
    def endpoint_settings(self, endpoint_settings):
        """Sets the endpoint_settings of this SiteDiscoverySettings.

        Enable or disable endpoint exceptions  # noqa: E501

        :param endpoint_settings: The endpoint_settings of this SiteDiscoverySettings.  # noqa: E501
        :type: list[EndpointSettingsDto]
        """

        self._endpoint_settings = endpoint_settings

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SiteDiscoverySettings, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteDiscoverySettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""
    Imperva Advanced API Security

    This topic describes the API for Imperva Advanced API Security. For full feature documentation, see [Imperva API Security](https://docs.imperva.com/bundle/api-security/page/72248.htm).  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AddApiResponseValue(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'api_id': 'int',
        'result_message': 'str',
        'duplicate_endpoints_list': 'list[DuplicateEndpointResponse]'
    }

    attribute_map = {
        'api_id': 'apiId',
        'result_message': 'resultMessage',
        'duplicate_endpoints_list': 'duplicateEndpointsList'
    }

    def __init__(self, api_id=None, result_message=None, duplicate_endpoints_list=None):  # noqa: E501
        """AddApiResponseValue - a model defined in Swagger"""  # noqa: E501
        self._api_id = None
        self._result_message = None
        self._duplicate_endpoints_list = None
        self.discriminator = None
        if api_id is not None:
            self.api_id = api_id
        if result_message is not None:
            self.result_message = result_message
        if duplicate_endpoints_list is not None:
            self.duplicate_endpoints_list = duplicate_endpoints_list

    @property
    def api_id(self):
        """Gets the api_id of this AddApiResponseValue.  # noqa: E501

        The API specification ID  # noqa: E501

        :return: The api_id of this AddApiResponseValue.  # noqa: E501
        :rtype: int
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this AddApiResponseValue.

        The API specification ID  # noqa: E501

        :param api_id: The api_id of this AddApiResponseValue.  # noqa: E501
        :type: int
        """

        self._api_id = api_id

    @property
    def result_message(self):
        """Gets the result_message of this AddApiResponseValue.  # noqa: E501

        Additional information on the action taken  # noqa: E501

        :return: The result_message of this AddApiResponseValue.  # noqa: E501
        :rtype: str
        """
        return self._result_message

    @result_message.setter
    def result_message(self, result_message):
        """Sets the result_message of this AddApiResponseValue.

        Additional information on the action taken  # noqa: E501

        :param result_message: The result_message of this AddApiResponseValue.  # noqa: E501
        :type: str
        """

        self._result_message = result_message

    @property
    def duplicate_endpoints_list(self):
        """Gets the duplicate_endpoints_list of this AddApiResponseValue.  # noqa: E501

        A list of objects representing duplicate endpoints which were not added as part of the action taken because they exist in another API  # noqa: E501

        :return: The duplicate_endpoints_list of this AddApiResponseValue.  # noqa: E501
        :rtype: list[DuplicateEndpointResponse]
        """
        return self._duplicate_endpoints_list

    @duplicate_endpoints_list.setter
    def duplicate_endpoints_list(self, duplicate_endpoints_list):
        """Sets the duplicate_endpoints_list of this AddApiResponseValue.

        A list of objects representing duplicate endpoints which were not added as part of the action taken because they exist in another API  # noqa: E501

        :param duplicate_endpoints_list: The duplicate_endpoints_list of this AddApiResponseValue.  # noqa: E501
        :type: list[DuplicateEndpointResponse]
        """

        self._duplicate_endpoints_list = duplicate_endpoints_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AddApiResponseValue, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AddApiResponseValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""
    Imperva Advanced API Security

    This topic describes the API for Imperva Advanced API Security. For full feature documentation, see [Imperva API Security](https://docs.imperva.com/bundle/api-security/page/72248.htm).  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ApiWithEndpointResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'specification_violation_action': 'str',
        'violation_actions': 'ApiViolationActions',
        'id': 'int',
        'site_id': 'int',
        'site_name': 'str',
        'host_name': 'str',
        'base_path': 'str',
        'description': 'str',
        'last_modified': 'int',
        'creation_time': 'int',
        'api_source': 'str',
        'oas_file_name': 'str',
        'endpoints': 'list[EndpointResponse]'
    }

    attribute_map = {
        'specification_violation_action': 'specificationViolationAction',
        'violation_actions': 'violationActions',
        'id': 'id',
        'site_id': 'siteId',
        'site_name': 'siteName',
        'host_name': 'hostName',
        'base_path': 'basePath',
        'description': 'description',
        'last_modified': 'lastModified',
        'creation_time': 'creationTime',
        'api_source': 'apiSource',
        'oas_file_name': 'oasFileName',
        'endpoints': 'endpoints'
    }

    def __init__(self, specification_violation_action=None, violation_actions=None, id=None, site_id=None, site_name=None, host_name=None, base_path=None, description=None, last_modified=None, creation_time=None, api_source=None, oas_file_name=None, endpoints=None):  # noqa: E501
        """ApiWithEndpointResponse - a model defined in Swagger"""  # noqa: E501
        self._specification_violation_action = None
        self._violation_actions = None
        self._id = None
        self._site_id = None
        self._site_name = None
        self._host_name = None
        self._base_path = None
        self._description = None
        self._last_modified = None
        self._creation_time = None
        self._api_source = None
        self._oas_file_name = None
        self._endpoints = None
        self.discriminator = None
        if specification_violation_action is not None:
            self.specification_violation_action = specification_violation_action
        if violation_actions is not None:
            self.violation_actions = violation_actions
        if id is not None:
            self.id = id
        if site_id is not None:
            self.site_id = site_id
        if site_name is not None:
            self.site_name = site_name
        if host_name is not None:
            self.host_name = host_name
        if base_path is not None:
            self.base_path = base_path
        if description is not None:
            self.description = description
        if last_modified is not None:
            self.last_modified = last_modified
        if creation_time is not None:
            self.creation_time = creation_time
        if api_source is not None:
            self.api_source = api_source
        if oas_file_name is not None:
            self.oas_file_name = oas_file_name
        self.endpoints = endpoints

    @property
    def specification_violation_action(self):
        """Gets the specification_violation_action of this ApiWithEndpointResponse.  # noqa: E501

        The action taken when an API Specification Violation occurs  # noqa: E501

        :return: The specification_violation_action of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification_violation_action

    @specification_violation_action.setter
    def specification_violation_action(self, specification_violation_action):
        """Sets the specification_violation_action of this ApiWithEndpointResponse.

        The action taken when an API Specification Violation occurs  # noqa: E501

        :param specification_violation_action: The specification_violation_action of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["ALERT_ONLY", "BLOCK_REQUEST", "BLOCK_USER", "BLOCK_IP", "IGNORE", "DEFAULT"]  # noqa: E501
        if specification_violation_action not in allowed_values:
            raise ValueError(
                "Invalid value for `specification_violation_action` ({0}), must be one of {1}"  # noqa: E501
                .format(specification_violation_action, allowed_values)
            )

        self._specification_violation_action = specification_violation_action

    @property
    def violation_actions(self):
        """Gets the violation_actions of this ApiWithEndpointResponse.  # noqa: E501


        :return: The violation_actions of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: ApiViolationActions
        """
        return self._violation_actions

    @violation_actions.setter
    def violation_actions(self, violation_actions):
        """Sets the violation_actions of this ApiWithEndpointResponse.


        :param violation_actions: The violation_actions of this ApiWithEndpointResponse.  # noqa: E501
        :type: ApiViolationActions
        """

        self._violation_actions = violation_actions

    @property
    def id(self):
        """Gets the id of this ApiWithEndpointResponse.  # noqa: E501

        The API ID  # noqa: E501

        :return: The id of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ApiWithEndpointResponse.

        The API ID  # noqa: E501

        :param id: The id of this ApiWithEndpointResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def site_id(self):
        """Gets the site_id of this ApiWithEndpointResponse.  # noqa: E501

        The site ID  # noqa: E501

        :return: The site_id of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this ApiWithEndpointResponse.

        The site ID  # noqa: E501

        :param site_id: The site_id of this ApiWithEndpointResponse.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def site_name(self):
        """Gets the site_name of this ApiWithEndpointResponse.  # noqa: E501

        The site’s domain name  # noqa: E501

        :return: The site_name of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this ApiWithEndpointResponse.

        The site’s domain name  # noqa: E501

        :param site_name: The site_name of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def host_name(self):
        """Gets the host_name of this ApiWithEndpointResponse.  # noqa: E501

        The  API's host name  # noqa: E501

        :return: The host_name of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this ApiWithEndpointResponse.

        The  API's host name  # noqa: E501

        :param host_name: The host_name of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """

        self._host_name = host_name

    @property
    def base_path(self):
        """Gets the base_path of this ApiWithEndpointResponse.  # noqa: E501

        The API's basePath  # noqa: E501

        :return: The base_path of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._base_path

    @base_path.setter
    def base_path(self, base_path):
        """Sets the base_path of this ApiWithEndpointResponse.

        The API's basePath  # noqa: E501

        :param base_path: The base_path of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """

        self._base_path = base_path

    @property
    def description(self):
        """Gets the description of this ApiWithEndpointResponse.  # noqa: E501

        The API's description in the dashboard  # noqa: E501

        :return: The description of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiWithEndpointResponse.

        The API's description in the dashboard  # noqa: E501

        :param description: The description of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def last_modified(self):
        """Gets the last_modified of this ApiWithEndpointResponse.  # noqa: E501

        The last modified timestamp  # noqa: E501

        :return: The last_modified of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: int
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this ApiWithEndpointResponse.

        The last modified timestamp  # noqa: E501

        :param last_modified: The last_modified of this ApiWithEndpointResponse.  # noqa: E501
        :type: int
        """

        self._last_modified = last_modified

    @property
    def creation_time(self):
        """Gets the creation_time of this ApiWithEndpointResponse.  # noqa: E501

        The timestamp when this api was created  # noqa: E501

        :return: The creation_time of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: int
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this ApiWithEndpointResponse.

        The timestamp when this api was created  # noqa: E501

        :param creation_time: The creation_time of this ApiWithEndpointResponse.  # noqa: E501
        :type: int
        """

        self._creation_time = creation_time

    @property
    def api_source(self):
        """Gets the api_source of this ApiWithEndpointResponse.  # noqa: E501

        The source from which the API was created  # noqa: E501

        :return: The api_source of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._api_source

    @api_source.setter
    def api_source(self, api_source):
        """Sets the api_source of this ApiWithEndpointResponse.

        The source from which the API was created  # noqa: E501

        :param api_source: The api_source of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["USER", "DISCOVERY", "MIXED"]  # noqa: E501
        if api_source not in allowed_values:
            raise ValueError(
                "Invalid value for `api_source` ({0}), must be one of {1}"  # noqa: E501
                .format(api_source, allowed_values)
            )

        self._api_source = api_source

    @property
    def oas_file_name(self):
        """Gets the oas_file_name of this ApiWithEndpointResponse.  # noqa: E501

        Uploaded oas file name  # noqa: E501

        :return: The oas_file_name of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: str
        """
        return self._oas_file_name

    @oas_file_name.setter
    def oas_file_name(self, oas_file_name):
        """Sets the oas_file_name of this ApiWithEndpointResponse.

        Uploaded oas file name  # noqa: E501

        :param oas_file_name: The oas_file_name of this ApiWithEndpointResponse.  # noqa: E501
        :type: str
        """

        self._oas_file_name = oas_file_name

    @property
    def endpoints(self):
        """Gets the endpoints of this ApiWithEndpointResponse.  # noqa: E501


        :return: The endpoints of this ApiWithEndpointResponse.  # noqa: E501
        :rtype: list[EndpointResponse]
        """
        return self._endpoints

    @endpoints.setter
    def endpoints(self, endpoints):
        """Sets the endpoints of this ApiWithEndpointResponse.


        :param endpoints: The endpoints of this ApiWithEndpointResponse.  # noqa: E501
        :type: list[EndpointResponse]
        """
        if endpoints is None:
            raise ValueError("Invalid value for `endpoints`, must not be `None`")  # noqa: E501

        self._endpoints = endpoints

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApiWithEndpointResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiWithEndpointResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

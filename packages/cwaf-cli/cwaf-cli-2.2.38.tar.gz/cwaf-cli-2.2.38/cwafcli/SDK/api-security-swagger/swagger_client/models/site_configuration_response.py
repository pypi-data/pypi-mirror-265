# coding: utf-8

"""
    Imperva Advanced API Security

    This topic describes the API for Imperva Advanced API Security. For full feature documentation, see [Imperva API Security](https://docs.imperva.com/bundle/api-security/page/72248.htm).  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SiteConfigurationResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'site_id': 'int',
        'account_id': 'int',
        'site_name': 'str',
        'api_only_site': 'bool',
        'non_api_request_violation_action': 'str',
        'last_modified': 'int',
        'violation_actions': 'ApiViolationActions',
        'discovery_enabled': 'bool',
        'discovery_exclude_base_path': 'list[str]',
        'discovery_include_base_path': 'list[str]',
        'is_automatic_discovery_api_integration_enabled': 'bool'
    }

    attribute_map = {
        'site_id': 'siteId',
        'account_id': 'accountId',
        'site_name': 'siteName',
        'api_only_site': 'apiOnlySite',
        'non_api_request_violation_action': 'nonApiRequestViolationAction',
        'last_modified': 'lastModified',
        'violation_actions': 'violationActions',
        'discovery_enabled': 'discoveryEnabled',
        'discovery_exclude_base_path': 'discoveryExcludeBasePath',
        'discovery_include_base_path': 'discoveryIncludeBasePath',
        'is_automatic_discovery_api_integration_enabled': 'isAutomaticDiscoveryApiIntegrationEnabled'
    }

    def __init__(self, site_id=None, account_id=None, site_name=None, api_only_site=None, non_api_request_violation_action=None, last_modified=None, violation_actions=None, discovery_enabled=None, discovery_exclude_base_path=None, discovery_include_base_path=None, is_automatic_discovery_api_integration_enabled=None):  # noqa: E501
        """SiteConfigurationResponse - a model defined in Swagger"""  # noqa: E501
        self._site_id = None
        self._account_id = None
        self._site_name = None
        self._api_only_site = None
        self._non_api_request_violation_action = None
        self._last_modified = None
        self._violation_actions = None
        self._discovery_enabled = None
        self._discovery_exclude_base_path = None
        self._discovery_include_base_path = None
        self._is_automatic_discovery_api_integration_enabled = None
        self.discriminator = None
        if site_id is not None:
            self.site_id = site_id
        if account_id is not None:
            self.account_id = account_id
        if site_name is not None:
            self.site_name = site_name
        self.api_only_site = api_only_site
        self.non_api_request_violation_action = non_api_request_violation_action
        if last_modified is not None:
            self.last_modified = last_modified
        if violation_actions is not None:
            self.violation_actions = violation_actions
        if discovery_enabled is not None:
            self.discovery_enabled = discovery_enabled
        if discovery_exclude_base_path is not None:
            self.discovery_exclude_base_path = discovery_exclude_base_path
        if discovery_include_base_path is not None:
            self.discovery_include_base_path = discovery_include_base_path
        if is_automatic_discovery_api_integration_enabled is not None:
            self.is_automatic_discovery_api_integration_enabled = is_automatic_discovery_api_integration_enabled

    @property
    def site_id(self):
        """Gets the site_id of this SiteConfigurationResponse.  # noqa: E501

        The site id  # noqa: E501

        :return: The site_id of this SiteConfigurationResponse.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this SiteConfigurationResponse.

        The site id  # noqa: E501

        :param site_id: The site_id of this SiteConfigurationResponse.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def account_id(self):
        """Gets the account_id of this SiteConfigurationResponse.  # noqa: E501

        The account Id  # noqa: E501

        :return: The account_id of this SiteConfigurationResponse.  # noqa: E501
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SiteConfigurationResponse.

        The account Id  # noqa: E501

        :param account_id: The account_id of this SiteConfigurationResponse.  # noqa: E501
        :type: int
        """

        self._account_id = account_id

    @property
    def site_name(self):
        """Gets the site_name of this SiteConfigurationResponse.  # noqa: E501

        The site name  # noqa: E501

        :return: The site_name of this SiteConfigurationResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this SiteConfigurationResponse.

        The site name  # noqa: E501

        :param site_name: The site_name of this SiteConfigurationResponse.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def api_only_site(self):
        """Gets the api_only_site of this SiteConfigurationResponse.  # noqa: E501


        :return: The api_only_site of this SiteConfigurationResponse.  # noqa: E501
        :rtype: bool
        """
        return self._api_only_site

    @api_only_site.setter
    def api_only_site(self, api_only_site):
        """Sets the api_only_site of this SiteConfigurationResponse.


        :param api_only_site: The api_only_site of this SiteConfigurationResponse.  # noqa: E501
        :type: bool
        """
        if api_only_site is None:
            raise ValueError("Invalid value for `api_only_site`, must not be `None`")  # noqa: E501

        self._api_only_site = api_only_site

    @property
    def non_api_request_violation_action(self):
        """Gets the non_api_request_violation_action of this SiteConfigurationResponse.  # noqa: E501


        :return: The non_api_request_violation_action of this SiteConfigurationResponse.  # noqa: E501
        :rtype: str
        """
        return self._non_api_request_violation_action

    @non_api_request_violation_action.setter
    def non_api_request_violation_action(self, non_api_request_violation_action):
        """Sets the non_api_request_violation_action of this SiteConfigurationResponse.


        :param non_api_request_violation_action: The non_api_request_violation_action of this SiteConfigurationResponse.  # noqa: E501
        :type: str
        """
        if non_api_request_violation_action is None:
            raise ValueError("Invalid value for `non_api_request_violation_action`, must not be `None`")  # noqa: E501

        self._non_api_request_violation_action = non_api_request_violation_action

    @property
    def last_modified(self):
        """Gets the last_modified of this SiteConfigurationResponse.  # noqa: E501

        The last modified timestamp  # noqa: E501

        :return: The last_modified of this SiteConfigurationResponse.  # noqa: E501
        :rtype: int
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this SiteConfigurationResponse.

        The last modified timestamp  # noqa: E501

        :param last_modified: The last_modified of this SiteConfigurationResponse.  # noqa: E501
        :type: int
        """

        self._last_modified = last_modified

    @property
    def violation_actions(self):
        """Gets the violation_actions of this SiteConfigurationResponse.  # noqa: E501


        :return: The violation_actions of this SiteConfigurationResponse.  # noqa: E501
        :rtype: ApiViolationActions
        """
        return self._violation_actions

    @violation_actions.setter
    def violation_actions(self, violation_actions):
        """Sets the violation_actions of this SiteConfigurationResponse.


        :param violation_actions: The violation_actions of this SiteConfigurationResponse.  # noqa: E501
        :type: ApiViolationActions
        """

        self._violation_actions = violation_actions

    @property
    def discovery_enabled(self):
        """Gets the discovery_enabled of this SiteConfigurationResponse.  # noqa: E501


        :return: The discovery_enabled of this SiteConfigurationResponse.  # noqa: E501
        :rtype: bool
        """
        return self._discovery_enabled

    @discovery_enabled.setter
    def discovery_enabled(self, discovery_enabled):
        """Sets the discovery_enabled of this SiteConfigurationResponse.


        :param discovery_enabled: The discovery_enabled of this SiteConfigurationResponse.  # noqa: E501
        :type: bool
        """

        self._discovery_enabled = discovery_enabled

    @property
    def discovery_exclude_base_path(self):
        """Gets the discovery_exclude_base_path of this SiteConfigurationResponse.  # noqa: E501


        :return: The discovery_exclude_base_path of this SiteConfigurationResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._discovery_exclude_base_path

    @discovery_exclude_base_path.setter
    def discovery_exclude_base_path(self, discovery_exclude_base_path):
        """Sets the discovery_exclude_base_path of this SiteConfigurationResponse.


        :param discovery_exclude_base_path: The discovery_exclude_base_path of this SiteConfigurationResponse.  # noqa: E501
        :type: list[str]
        """

        self._discovery_exclude_base_path = discovery_exclude_base_path

    @property
    def discovery_include_base_path(self):
        """Gets the discovery_include_base_path of this SiteConfigurationResponse.  # noqa: E501


        :return: The discovery_include_base_path of this SiteConfigurationResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._discovery_include_base_path

    @discovery_include_base_path.setter
    def discovery_include_base_path(self, discovery_include_base_path):
        """Sets the discovery_include_base_path of this SiteConfigurationResponse.


        :param discovery_include_base_path: The discovery_include_base_path of this SiteConfigurationResponse.  # noqa: E501
        :type: list[str]
        """

        self._discovery_include_base_path = discovery_include_base_path

    @property
    def is_automatic_discovery_api_integration_enabled(self):
        """Gets the is_automatic_discovery_api_integration_enabled of this SiteConfigurationResponse.  # noqa: E501


        :return: The is_automatic_discovery_api_integration_enabled of this SiteConfigurationResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_automatic_discovery_api_integration_enabled

    @is_automatic_discovery_api_integration_enabled.setter
    def is_automatic_discovery_api_integration_enabled(self, is_automatic_discovery_api_integration_enabled):
        """Sets the is_automatic_discovery_api_integration_enabled of this SiteConfigurationResponse.


        :param is_automatic_discovery_api_integration_enabled: The is_automatic_discovery_api_integration_enabled of this SiteConfigurationResponse.  # noqa: E501
        :type: bool
        """

        self._is_automatic_discovery_api_integration_enabled = is_automatic_discovery_api_integration_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SiteConfigurationResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteConfigurationResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""
    Cloud Application Security API

    Imperva provides customers and partners with the ability to manage accounts and sites via an API. For more information, see <a style=\"text-decoration:none\" href=\"https://docs.imperva.com/csh?context=my_api\">Cloud Application Security API Reference</a>.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RequestBodyTimeoutDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'methods': 'list[object]',
        'interval': 'int',
        'byte_count': 'int',
        'request_body_timeouts': 'RequestBodyTimeoutDTO'
    }

    attribute_map = {
        'methods': 'methods',
        'interval': 'interval',
        'byte_count': 'byteCount',
        'request_body_timeouts': 'requestBodyTimeouts'
    }

    def __init__(self, methods=None, interval=None, byte_count=None, request_body_timeouts=None):  # noqa: E501
        """RequestBodyTimeoutDTO - a model defined in Swagger"""  # noqa: E501
        self._methods = None
        self._interval = None
        self._byte_count = None
        self._request_body_timeouts = None
        self.discriminator = None
        if methods is not None:
            self.methods = methods
        if interval is not None:
            self.interval = interval
        if byte_count is not None:
            self.byte_count = byte_count
        if request_body_timeouts is not None:
            self.request_body_timeouts = request_body_timeouts

    @property
    def methods(self):
        """Gets the methods of this RequestBodyTimeoutDTO.  # noqa: E501


        :return: The methods of this RequestBodyTimeoutDTO.  # noqa: E501
        :rtype: list[object]
        """
        return self._methods

    @methods.setter
    def methods(self, methods):
        """Sets the methods of this RequestBodyTimeoutDTO.


        :param methods: The methods of this RequestBodyTimeoutDTO.  # noqa: E501
        :type: list[object]
        """

        self._methods = methods

    @property
    def interval(self):
        """Gets the interval of this RequestBodyTimeoutDTO.  # noqa: E501


        :return: The interval of this RequestBodyTimeoutDTO.  # noqa: E501
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this RequestBodyTimeoutDTO.


        :param interval: The interval of this RequestBodyTimeoutDTO.  # noqa: E501
        :type: int
        """

        self._interval = interval

    @property
    def byte_count(self):
        """Gets the byte_count of this RequestBodyTimeoutDTO.  # noqa: E501


        :return: The byte_count of this RequestBodyTimeoutDTO.  # noqa: E501
        :rtype: int
        """
        return self._byte_count

    @byte_count.setter
    def byte_count(self, byte_count):
        """Sets the byte_count of this RequestBodyTimeoutDTO.


        :param byte_count: The byte_count of this RequestBodyTimeoutDTO.  # noqa: E501
        :type: int
        """

        self._byte_count = byte_count

    @property
    def request_body_timeouts(self):
        """Gets the request_body_timeouts of this RequestBodyTimeoutDTO.  # noqa: E501


        :return: The request_body_timeouts of this RequestBodyTimeoutDTO.  # noqa: E501
        :rtype: RequestBodyTimeoutDTO
        """
        return self._request_body_timeouts

    @request_body_timeouts.setter
    def request_body_timeouts(self, request_body_timeouts):
        """Sets the request_body_timeouts of this RequestBodyTimeoutDTO.


        :param request_body_timeouts: The request_body_timeouts of this RequestBodyTimeoutDTO.  # noqa: E501
        :type: RequestBodyTimeoutDTO
        """

        self._request_body_timeouts = request_body_timeouts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RequestBodyTimeoutDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RequestBodyTimeoutDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

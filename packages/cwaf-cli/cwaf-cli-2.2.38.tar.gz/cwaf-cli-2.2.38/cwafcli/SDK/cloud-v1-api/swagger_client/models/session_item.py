# coding: utf-8

"""
    Cloud Application Security API

    Imperva provides customers and partners with the ability to manage accounts and sites via an API. For more information, see <a style=\"text-decoration:none\" href=\"https://docs.imperva.com/csh?context=my_api\">Cloud Application Security API Reference</a>.  # noqa: E501

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SessionItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'site_id': 'int',
        'start_time': 'int',
        'end_time': 'int',
        'client_ips': 'list[object]',
        'country': 'list[object]',
        'country_code': 'list[object]',
        'client_type': 'str',
        'client_application': 'str',
        'client_application_id': 'int',
        'http_version': 'str',
        'client_application_version': 'str',
        'user_agent': 'str',
        'os': 'str',
        'os_version': 'str',
        'supports_cookies': 'bool',
        'supports_java_script': 'bool',
        'hits': 'int',
        'page_views': 'int',
        'entry_referer': 'str',
        'entry_page': 'str',
        'served_via': 'list[object]',
        'security_summary': 'list[dict(str, object)]',
        'actions': 'list[ActionItem]'
    }

    attribute_map = {
        'id': 'id',
        'site_id': 'siteId',
        'start_time': 'startTime',
        'end_time': 'endTime',
        'client_ips': 'clientIPs',
        'country': 'country',
        'country_code': 'countryCode',
        'client_type': 'clientType',
        'client_application': 'clientApplication',
        'client_application_id': 'clientApplicationId',
        'http_version': 'httpVersion',
        'client_application_version': 'clientApplicationVersion',
        'user_agent': 'userAgent',
        'os': 'os',
        'os_version': 'osVersion',
        'supports_cookies': 'supportsCookies',
        'supports_java_script': 'supportsJavaScript',
        'hits': 'hits',
        'page_views': 'pageViews',
        'entry_referer': 'entryReferer',
        'entry_page': 'entryPage',
        'served_via': 'servedVia',
        'security_summary': 'securitySummary',
        'actions': 'actions'
    }

    def __init__(self, id=None, site_id=None, start_time=None, end_time=None, client_ips=None, country=None, country_code=None, client_type=None, client_application=None, client_application_id=None, http_version=None, client_application_version=None, user_agent=None, os=None, os_version=None, supports_cookies=None, supports_java_script=None, hits=None, page_views=None, entry_referer=None, entry_page=None, served_via=None, security_summary=None, actions=None):  # noqa: E501
        """SessionItem - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._site_id = None
        self._start_time = None
        self._end_time = None
        self._client_ips = None
        self._country = None
        self._country_code = None
        self._client_type = None
        self._client_application = None
        self._client_application_id = None
        self._http_version = None
        self._client_application_version = None
        self._user_agent = None
        self._os = None
        self._os_version = None
        self._supports_cookies = None
        self._supports_java_script = None
        self._hits = None
        self._page_views = None
        self._entry_referer = None
        self._entry_page = None
        self._served_via = None
        self._security_summary = None
        self._actions = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if site_id is not None:
            self.site_id = site_id
        if start_time is not None:
            self.start_time = start_time
        if end_time is not None:
            self.end_time = end_time
        if client_ips is not None:
            self.client_ips = client_ips
        if country is not None:
            self.country = country
        if country_code is not None:
            self.country_code = country_code
        if client_type is not None:
            self.client_type = client_type
        if client_application is not None:
            self.client_application = client_application
        if client_application_id is not None:
            self.client_application_id = client_application_id
        if http_version is not None:
            self.http_version = http_version
        if client_application_version is not None:
            self.client_application_version = client_application_version
        if user_agent is not None:
            self.user_agent = user_agent
        if os is not None:
            self.os = os
        if os_version is not None:
            self.os_version = os_version
        if supports_cookies is not None:
            self.supports_cookies = supports_cookies
        if supports_java_script is not None:
            self.supports_java_script = supports_java_script
        if hits is not None:
            self.hits = hits
        if page_views is not None:
            self.page_views = page_views
        if entry_referer is not None:
            self.entry_referer = entry_referer
        if entry_page is not None:
            self.entry_page = entry_page
        if served_via is not None:
            self.served_via = served_via
        if security_summary is not None:
            self.security_summary = security_summary
        if actions is not None:
            self.actions = actions

    @property
    def id(self):
        """Gets the id of this SessionItem.  # noqa: E501


        :return: The id of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SessionItem.


        :param id: The id of this SessionItem.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def site_id(self):
        """Gets the site_id of this SessionItem.  # noqa: E501


        :return: The site_id of this SessionItem.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this SessionItem.


        :param site_id: The site_id of this SessionItem.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def start_time(self):
        """Gets the start_time of this SessionItem.  # noqa: E501


        :return: The start_time of this SessionItem.  # noqa: E501
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this SessionItem.


        :param start_time: The start_time of this SessionItem.  # noqa: E501
        :type: int
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this SessionItem.  # noqa: E501


        :return: The end_time of this SessionItem.  # noqa: E501
        :rtype: int
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this SessionItem.


        :param end_time: The end_time of this SessionItem.  # noqa: E501
        :type: int
        """

        self._end_time = end_time

    @property
    def client_ips(self):
        """Gets the client_ips of this SessionItem.  # noqa: E501


        :return: The client_ips of this SessionItem.  # noqa: E501
        :rtype: list[object]
        """
        return self._client_ips

    @client_ips.setter
    def client_ips(self, client_ips):
        """Sets the client_ips of this SessionItem.


        :param client_ips: The client_ips of this SessionItem.  # noqa: E501
        :type: list[object]
        """

        self._client_ips = client_ips

    @property
    def country(self):
        """Gets the country of this SessionItem.  # noqa: E501


        :return: The country of this SessionItem.  # noqa: E501
        :rtype: list[object]
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this SessionItem.


        :param country: The country of this SessionItem.  # noqa: E501
        :type: list[object]
        """

        self._country = country

    @property
    def country_code(self):
        """Gets the country_code of this SessionItem.  # noqa: E501


        :return: The country_code of this SessionItem.  # noqa: E501
        :rtype: list[object]
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this SessionItem.


        :param country_code: The country_code of this SessionItem.  # noqa: E501
        :type: list[object]
        """

        self._country_code = country_code

    @property
    def client_type(self):
        """Gets the client_type of this SessionItem.  # noqa: E501


        :return: The client_type of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._client_type

    @client_type.setter
    def client_type(self, client_type):
        """Sets the client_type of this SessionItem.


        :param client_type: The client_type of this SessionItem.  # noqa: E501
        :type: str
        """

        self._client_type = client_type

    @property
    def client_application(self):
        """Gets the client_application of this SessionItem.  # noqa: E501


        :return: The client_application of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._client_application

    @client_application.setter
    def client_application(self, client_application):
        """Sets the client_application of this SessionItem.


        :param client_application: The client_application of this SessionItem.  # noqa: E501
        :type: str
        """

        self._client_application = client_application

    @property
    def client_application_id(self):
        """Gets the client_application_id of this SessionItem.  # noqa: E501


        :return: The client_application_id of this SessionItem.  # noqa: E501
        :rtype: int
        """
        return self._client_application_id

    @client_application_id.setter
    def client_application_id(self, client_application_id):
        """Sets the client_application_id of this SessionItem.


        :param client_application_id: The client_application_id of this SessionItem.  # noqa: E501
        :type: int
        """

        self._client_application_id = client_application_id

    @property
    def http_version(self):
        """Gets the http_version of this SessionItem.  # noqa: E501


        :return: The http_version of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._http_version

    @http_version.setter
    def http_version(self, http_version):
        """Sets the http_version of this SessionItem.


        :param http_version: The http_version of this SessionItem.  # noqa: E501
        :type: str
        """

        self._http_version = http_version

    @property
    def client_application_version(self):
        """Gets the client_application_version of this SessionItem.  # noqa: E501


        :return: The client_application_version of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._client_application_version

    @client_application_version.setter
    def client_application_version(self, client_application_version):
        """Sets the client_application_version of this SessionItem.


        :param client_application_version: The client_application_version of this SessionItem.  # noqa: E501
        :type: str
        """

        self._client_application_version = client_application_version

    @property
    def user_agent(self):
        """Gets the user_agent of this SessionItem.  # noqa: E501


        :return: The user_agent of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this SessionItem.


        :param user_agent: The user_agent of this SessionItem.  # noqa: E501
        :type: str
        """

        self._user_agent = user_agent

    @property
    def os(self):
        """Gets the os of this SessionItem.  # noqa: E501


        :return: The os of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this SessionItem.


        :param os: The os of this SessionItem.  # noqa: E501
        :type: str
        """

        self._os = os

    @property
    def os_version(self):
        """Gets the os_version of this SessionItem.  # noqa: E501


        :return: The os_version of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this SessionItem.


        :param os_version: The os_version of this SessionItem.  # noqa: E501
        :type: str
        """

        self._os_version = os_version

    @property
    def supports_cookies(self):
        """Gets the supports_cookies of this SessionItem.  # noqa: E501


        :return: The supports_cookies of this SessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._supports_cookies

    @supports_cookies.setter
    def supports_cookies(self, supports_cookies):
        """Sets the supports_cookies of this SessionItem.


        :param supports_cookies: The supports_cookies of this SessionItem.  # noqa: E501
        :type: bool
        """

        self._supports_cookies = supports_cookies

    @property
    def supports_java_script(self):
        """Gets the supports_java_script of this SessionItem.  # noqa: E501


        :return: The supports_java_script of this SessionItem.  # noqa: E501
        :rtype: bool
        """
        return self._supports_java_script

    @supports_java_script.setter
    def supports_java_script(self, supports_java_script):
        """Sets the supports_java_script of this SessionItem.


        :param supports_java_script: The supports_java_script of this SessionItem.  # noqa: E501
        :type: bool
        """

        self._supports_java_script = supports_java_script

    @property
    def hits(self):
        """Gets the hits of this SessionItem.  # noqa: E501


        :return: The hits of this SessionItem.  # noqa: E501
        :rtype: int
        """
        return self._hits

    @hits.setter
    def hits(self, hits):
        """Sets the hits of this SessionItem.


        :param hits: The hits of this SessionItem.  # noqa: E501
        :type: int
        """

        self._hits = hits

    @property
    def page_views(self):
        """Gets the page_views of this SessionItem.  # noqa: E501


        :return: The page_views of this SessionItem.  # noqa: E501
        :rtype: int
        """
        return self._page_views

    @page_views.setter
    def page_views(self, page_views):
        """Sets the page_views of this SessionItem.


        :param page_views: The page_views of this SessionItem.  # noqa: E501
        :type: int
        """

        self._page_views = page_views

    @property
    def entry_referer(self):
        """Gets the entry_referer of this SessionItem.  # noqa: E501


        :return: The entry_referer of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._entry_referer

    @entry_referer.setter
    def entry_referer(self, entry_referer):
        """Sets the entry_referer of this SessionItem.


        :param entry_referer: The entry_referer of this SessionItem.  # noqa: E501
        :type: str
        """

        self._entry_referer = entry_referer

    @property
    def entry_page(self):
        """Gets the entry_page of this SessionItem.  # noqa: E501


        :return: The entry_page of this SessionItem.  # noqa: E501
        :rtype: str
        """
        return self._entry_page

    @entry_page.setter
    def entry_page(self, entry_page):
        """Sets the entry_page of this SessionItem.


        :param entry_page: The entry_page of this SessionItem.  # noqa: E501
        :type: str
        """

        self._entry_page = entry_page

    @property
    def served_via(self):
        """Gets the served_via of this SessionItem.  # noqa: E501


        :return: The served_via of this SessionItem.  # noqa: E501
        :rtype: list[object]
        """
        return self._served_via

    @served_via.setter
    def served_via(self, served_via):
        """Sets the served_via of this SessionItem.


        :param served_via: The served_via of this SessionItem.  # noqa: E501
        :type: list[object]
        """

        self._served_via = served_via

    @property
    def security_summary(self):
        """Gets the security_summary of this SessionItem.  # noqa: E501


        :return: The security_summary of this SessionItem.  # noqa: E501
        :rtype: list[dict(str, object)]
        """
        return self._security_summary

    @security_summary.setter
    def security_summary(self, security_summary):
        """Sets the security_summary of this SessionItem.


        :param security_summary: The security_summary of this SessionItem.  # noqa: E501
        :type: list[dict(str, object)]
        """

        self._security_summary = security_summary

    @property
    def actions(self):
        """Gets the actions of this SessionItem.  # noqa: E501


        :return: The actions of this SessionItem.  # noqa: E501
        :rtype: list[ActionItem]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this SessionItem.


        :param actions: The actions of this SessionItem.  # noqa: E501
        :type: list[ActionItem]
        """

        self._actions = actions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SessionItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SessionItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

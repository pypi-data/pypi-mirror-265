# coding: utf-8

"""
    SSL Certificate Management

    View and manage certificates for all websites in your account.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CertificateSanDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'san_id': 'int',
        'san_value': 'str',
        'validation_method': 'str',
        'expiration_date': 'int',
        'status': 'str',
        'status_date': 'int',
        'num_sites_covered': 'int',
        'verification_code': 'str',
        'cname_validation_value': 'str',
        'auto_validation': 'bool',
        'approver_fqdn': 'str',
        'validation_email': 'str'
    }

    attribute_map = {
        'san_id': 'sanId',
        'san_value': 'sanValue',
        'validation_method': 'validationMethod',
        'expiration_date': 'expirationDate',
        'status': 'status',
        'status_date': 'statusDate',
        'num_sites_covered': 'numSitesCovered',
        'verification_code': 'verificationCode',
        'cname_validation_value': 'cnameValidationValue',
        'auto_validation': 'autoValidation',
        'approver_fqdn': 'approverFqdn',
        'validation_email': 'validationEmail'
    }

    def __init__(self, san_id=None, san_value=None, validation_method=None, expiration_date=None, status=None, status_date=None, num_sites_covered=None, verification_code=None, cname_validation_value=None, auto_validation=None, approver_fqdn=None, validation_email=None):  # noqa: E501
        """CertificateSanDetails - a model defined in Swagger"""  # noqa: E501
        self._san_id = None
        self._san_value = None
        self._validation_method = None
        self._expiration_date = None
        self._status = None
        self._status_date = None
        self._num_sites_covered = None
        self._verification_code = None
        self._cname_validation_value = None
        self._auto_validation = None
        self._approver_fqdn = None
        self._validation_email = None
        self.discriminator = None
        if san_id is not None:
            self.san_id = san_id
        if san_value is not None:
            self.san_value = san_value
        if validation_method is not None:
            self.validation_method = validation_method
        if expiration_date is not None:
            self.expiration_date = expiration_date
        if status is not None:
            self.status = status
        if status_date is not None:
            self.status_date = status_date
        if num_sites_covered is not None:
            self.num_sites_covered = num_sites_covered
        if verification_code is not None:
            self.verification_code = verification_code
        if cname_validation_value is not None:
            self.cname_validation_value = cname_validation_value
        if auto_validation is not None:
            self.auto_validation = auto_validation
        if approver_fqdn is not None:
            self.approver_fqdn = approver_fqdn
        if validation_email is not None:
            self.validation_email = validation_email

    @property
    def san_id(self):
        """Gets the san_id of this CertificateSanDetails.  # noqa: E501


        :return: The san_id of this CertificateSanDetails.  # noqa: E501
        :rtype: int
        """
        return self._san_id

    @san_id.setter
    def san_id(self, san_id):
        """Sets the san_id of this CertificateSanDetails.


        :param san_id: The san_id of this CertificateSanDetails.  # noqa: E501
        :type: int
        """

        self._san_id = san_id

    @property
    def san_value(self):
        """Gets the san_value of this CertificateSanDetails.  # noqa: E501


        :return: The san_value of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._san_value

    @san_value.setter
    def san_value(self, san_value):
        """Sets the san_value of this CertificateSanDetails.


        :param san_value: The san_value of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._san_value = san_value

    @property
    def validation_method(self):
        """Gets the validation_method of this CertificateSanDetails.  # noqa: E501


        :return: The validation_method of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._validation_method

    @validation_method.setter
    def validation_method(self, validation_method):
        """Sets the validation_method of this CertificateSanDetails.


        :param validation_method: The validation_method of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._validation_method = validation_method

    @property
    def expiration_date(self):
        """Gets the expiration_date of this CertificateSanDetails.  # noqa: E501


        :return: The expiration_date of this CertificateSanDetails.  # noqa: E501
        :rtype: int
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this CertificateSanDetails.


        :param expiration_date: The expiration_date of this CertificateSanDetails.  # noqa: E501
        :type: int
        """

        self._expiration_date = expiration_date

    @property
    def status(self):
        """Gets the status of this CertificateSanDetails.  # noqa: E501


        :return: The status of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CertificateSanDetails.


        :param status: The status of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def status_date(self):
        """Gets the status_date of this CertificateSanDetails.  # noqa: E501


        :return: The status_date of this CertificateSanDetails.  # noqa: E501
        :rtype: int
        """
        return self._status_date

    @status_date.setter
    def status_date(self, status_date):
        """Sets the status_date of this CertificateSanDetails.


        :param status_date: The status_date of this CertificateSanDetails.  # noqa: E501
        :type: int
        """

        self._status_date = status_date

    @property
    def num_sites_covered(self):
        """Gets the num_sites_covered of this CertificateSanDetails.  # noqa: E501


        :return: The num_sites_covered of this CertificateSanDetails.  # noqa: E501
        :rtype: int
        """
        return self._num_sites_covered

    @num_sites_covered.setter
    def num_sites_covered(self, num_sites_covered):
        """Sets the num_sites_covered of this CertificateSanDetails.


        :param num_sites_covered: The num_sites_covered of this CertificateSanDetails.  # noqa: E501
        :type: int
        """

        self._num_sites_covered = num_sites_covered

    @property
    def verification_code(self):
        """Gets the verification_code of this CertificateSanDetails.  # noqa: E501


        :return: The verification_code of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._verification_code

    @verification_code.setter
    def verification_code(self, verification_code):
        """Sets the verification_code of this CertificateSanDetails.


        :param verification_code: The verification_code of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._verification_code = verification_code

    @property
    def cname_validation_value(self):
        """Gets the cname_validation_value of this CertificateSanDetails.  # noqa: E501


        :return: The cname_validation_value of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._cname_validation_value

    @cname_validation_value.setter
    def cname_validation_value(self, cname_validation_value):
        """Sets the cname_validation_value of this CertificateSanDetails.


        :param cname_validation_value: The cname_validation_value of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._cname_validation_value = cname_validation_value

    @property
    def auto_validation(self):
        """Gets the auto_validation of this CertificateSanDetails.  # noqa: E501


        :return: The auto_validation of this CertificateSanDetails.  # noqa: E501
        :rtype: bool
        """
        return self._auto_validation

    @auto_validation.setter
    def auto_validation(self, auto_validation):
        """Sets the auto_validation of this CertificateSanDetails.


        :param auto_validation: The auto_validation of this CertificateSanDetails.  # noqa: E501
        :type: bool
        """

        self._auto_validation = auto_validation

    @property
    def approver_fqdn(self):
        """Gets the approver_fqdn of this CertificateSanDetails.  # noqa: E501


        :return: The approver_fqdn of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._approver_fqdn

    @approver_fqdn.setter
    def approver_fqdn(self, approver_fqdn):
        """Sets the approver_fqdn of this CertificateSanDetails.


        :param approver_fqdn: The approver_fqdn of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._approver_fqdn = approver_fqdn

    @property
    def validation_email(self):
        """Gets the validation_email of this CertificateSanDetails.  # noqa: E501


        :return: The validation_email of this CertificateSanDetails.  # noqa: E501
        :rtype: str
        """
        return self._validation_email

    @validation_email.setter
    def validation_email(self, validation_email):
        """Sets the validation_email of this CertificateSanDetails.


        :param validation_email: The validation_email of this CertificateSanDetails.  # noqa: E501
        :type: str
        """

        self._validation_email = validation_email

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CertificateSanDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CertificateSanDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""
    Spacestudio Orbital Transfer API

    Orbital Transfer API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from numerical-orbital-transfer-client.models.numerical_orbital_transfer_result import NumericalOrbitalTransferResult

class TestNumericalOrbitalTransferResult(unittest.TestCase):
    """NumericalOrbitalTransferResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NumericalOrbitalTransferResult:
        """Test NumericalOrbitalTransferResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NumericalOrbitalTransferResult`
        """
        model = NumericalOrbitalTransferResult()
        if include_optional:
            return NumericalOrbitalTransferResult(
                ephemerides_frame = '',
                number_of_burns = 56,
                thrust_duration = 1.337,
                used_propellant = 1.337,
                delta_v = 1.337,
                thruster_mean_duty_cycle = 1.337,
                total_warmup_duty_cycle = 1.337,
                mean_burn_duration_estimation = 1.337,
                mission_duration = 1.337,
                number_of_period = 1.337,
                total_impulse = 1.337,
                final_duty_cycle = 1.337,
                final_orbit = numerical-orbital-transfer-client.models.orbit.Orbit(
                    date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    type = 'Circular', 
                    altitude = 1.337, 
                    inclination = 1.337, 
                    anomaly = 1.337, 
                    anomaly_type = 'TRUE', 
                    argument_of_perigee = 1.337, 
                    mean_osc_type = 'MEAN', 
                    raan = 1.337, 
                    semi_major_axis = 1.337, 
                    eccentricity = 1.337, 
                    perigee_altitude = 1.337, 
                    apogee_altitude = 1.337, ),
                ephemeris = numerical-orbital-transfer-client.models.numerical_ephemeris.NumericalEphemeris(
                    ephemerides = [
                        [
                            1.337
                            ]
                        ], 
                    field_indexes = {
                        'key' : 56
                        }, )
            )
        else:
            return NumericalOrbitalTransferResult(
        )
        """

    def testNumericalOrbitalTransferResult(self):
        """Test NumericalOrbitalTransferResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

[tool.poetry]
name = "gigacommitai"
version = "1.2.0"
description = "CLI инструмент для генерации коммитов на основе ИИ"
authors = ["Roman Sotnikov <axeman.ofic@gmail.com>"]
readme = "README.md"
license = "MIT"
maintainers = ["Roman <axeman.ofic@gmail.com>"]
repository = "https://github.com/axemanofic/gigacommit"
keywords = ["python", "ai", "git", "commit"]
classifiers = [
  "Typing :: Typed",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.8"
gigachat = "^0.1.16"
typer = {extras = ["all"], version = "^0.9.0"}
platformdirs = "^4.2.0"
rtoml = "^0.10.0"


[tool.poetry.scripts]
gigacommitai = "gigacommitai.__main__:app"


[tool.poetry.group.dev.dependencies]
commitizen = "^3.20.0"
black = "^24.2.0"
pyright = "^1.1.351"
ruff = "^0.2.2"


[tool.commitizen]
name = "cz_conventional_commits"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
version_files = [
  "pyproject.toml:^version",
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

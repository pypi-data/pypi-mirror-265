# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pixelbin',
 'pixelbin.common',
 'pixelbin.platform',
 'pixelbin.platform.models',
 'pixelbin.utils']

package_data = \
{'': ['*']}

install_requires = \
['aiohttp>=3.8.1,<4.0.0',
 'coverage>=7.2.1,<8.0.0',
 'marshmallow>=3.15.0,<4.0.0',
 'pytest>=7.2.2,<8.0.0',
 'pytz>=2022.1,<2023.0',
 'ujson>=5.2.0,<6.0.0']

setup_kwargs = {
    'name': 'pixelbin',
    'version': '4.0.0',
    'description': 'Pixelbin SDK for Python',
    'long_description': '# Pixelbin Backend SDK for Python\n\nPixelbin Backend SDK for python helps you integrate the core Pixelbin features with your application.\n\n## Getting Started\n\nGetting started with Pixelbin Backend SDK for Python\n\n### Installation\n\n```\npip install pixelbin\n```\n\n---\n\n### Usage\n\n#### Quick Example\n\n```python\nimport asyncio\n\nfrom pixelbin import PixelbinClient, PixelbinConfig\n\n# create client with your API_TOKEN\nconfig = PixelbinConfig({\n    "domain": "https://api.pixelbin.io",\n    "apiSecret": "API_TOKEN",\n})\n\n# Create a pixelbin instance\npixelbin:PixelbinClient = PixelbinClient(config=config)\n\n# Sync method call\ntry:\n    result = pixelbin.assets.listFiles()\n    print(result)\nexcept Exception as e:\n    print(e)\n\n# Async method call\ntry:\n    result = asyncio.get_event_loop().run_until_complete(pixelbin.assets.listFilesAsync())\n    print(result)\nexcept Exception as e:\n    print(e)\n```\n\n## Security Utils\n\n### For generating Signed URLs\n\nGenerate a signed PixelBin url\n\n| Parameter              | Description                                          | Example                                                                                    |\n| ---------------------- | ---------------------------------------------------- | ------------------------------------------------------------------------------------------ |\n| `url` (string)         | A valid Pixelbin URL to be signed                    | `https://cdn.pixelbin.io/v2/dummy-cloudname/original/__playground/playground-default.jpeg` |\n| `expiry_seconds` (int) | Number of seconds the signed URL should be valid for | `20`                                                                                       |\n| `access_key` (string)  | Access key of the token used for signing             | `6227274d-92c9-4b74-bef8-2528542516d8`                                                     |\n| `token` (string)       | Value of the token used for signing                  | `dummy-token`                                                                              |\n\nExample:\n\n```python\nfrom pixelbin.utils.security import sign_url\n\nsigned_url = sign_url(\n    "https://cdn.pixelbin.io/v2/dummy-cloudname/original/__playground/playground-default.jpeg", # url\n    20, # expiry_seconds\n    "6227274d-92c9-4b74-bef8-2528542516d8", # access_key\n    "dummy-token", # token\n);\n# signed_url\n# https://cdn.pixelbin.io/v2/dummy-cloudname/original/__playground/playground-default.jpeg?pbs=8eb6a00af74e57967a42316e4de238aa88d92961649764fad1832c1bff101f25&pbe=1695635915&pbt=6227274d-92c9-4b74-bef8-2528542516d8\n```\n\nUsage with custom domain url\n\n```python\nfrom pixelbin.utils.security import sign_url\n\nsigned_url = sign_url(\n    "https://test.example.com/v2/original/__playground/playground-default.jpeg", # url\n    30, # expirySeconds\n    22, # tokenId\n    "dummy-token", # token\n);\n# signedUrl\n# https://test.example.com/v2/original/__playground/playground-default.jpeg?pbs=1aef31c1e0ecd8a875b1d3184f324327f4ab4bce419d81d1eb1a818ee5f2e3eb&pbe=1695705975&pbt=22\n```\n\n## URL Utils\n\nPixelbin provides url utilities to construct and deconstruct Pixelbin urls.\n\n### url_to_obj\n\nDeconstruct a pixelbin url\n\n| parameter               | description                                                        | example                                                                                               |\n| ----------------------- | ------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------- |\n| `url` (string)          | A valid Pixelbin URL                                               | `https://cdn.pixelbin.io/v2/your-cloud-name/z-slug/t.resize(h:100,w:200)~t.flip()/path/to/image.jpeg` |\n| `opts` (Object)         | Options for the conversion                                         | Default: `{ isCustomDomain: False }`                                                                  |\n| `opts.is_custom_domain` | Indicates if the URL belongs to a custom domain (default: `False`) |\n\n**Returns**:\n\n| Property                  | Description                                          | Example                               |\n| ------------------------- | ---------------------------------------------------- | ------------------------------------- |\n| `baseURL` (string)        | Base path of the URL                                 | `https://cdn.pixelbin.io`             |\n| `filePath` (string)       | Path to the file on Pixelbin storage                 | `/path/to/image.jpeg`                 |\n| `version` (string)        | Version of the URL                                   | `v2`                                  |\n| `cloudName` (string)      | Cloud name from the URL                              | `your-cloud-name`                     |\n| `transformations` (array) | A list of transformation objects                     | `[{ "plugin": "t", "name": "flip" }]` |\n| `zone` (string)           | Zone slug from the URL                               | `z-slug`                              |\n| `pattern` (string)        | Transformation pattern extracted from the URL        | `t.resize(h:100,w:200)~t.flip()`      |\n| `worker` (boolean)        | Indicates if the URL is a URL Translation Worker URL | `False`                               |\n| `workerPath` (string)     | Input path to a URL Translation Worker               | `resize:w200,h400/folder/image.jpeg`  |\n| `options` (Object)        | Query parameters added, such as "dpr" and "f_auto"   | `{ dpr: 2.5, f_auto: True}`           |\n\nExample:\n\n```python\nfrom pixelbin.utils.url import url_to_obj\n\npixelbinUrl = "https://cdn.pixelbin.io/v2/your-cloud-name/z-slug/t.resize(h:100,w:200)~t.flip()/path/to/image.jpeg?dpr=2.0&f_auto=true"\nobj = url_to_obj(pixelbinUrl)\n# obj\n# {\n#     "cloudName": "your-cloud-name",\n#     "zone": "z-slug",\n#     "version": "v2",\n#     "options": {\n#         "dpr": 2.0,\n#         "f_auto": True,\n#     },\n#     "transformations": [\n#         {\n#             "plugin": "t",\n#             "name": "resize",\n#             "values": [\n#                 {\n#                     "key": "h",\n#                     "value": "100"\n#                 },\n#                 {\n#                     "key": "w",\n#                     "value": "200"\n#                 }\n#             ]\n#         },\n#         {\n#             "plugin": "t",\n#             "name": "flip",\n#         }\n#     ],\n#     "filePath": "path/to/image.jpeg",\n#     "baseUrl": "https://cdn.pixelbin.io"\n# }\n```\n\n```python\nfrom pixelbin.utils.url import url_to_obj\n\ncustomDomainUrl =\n    "https://xyz.designify.media/v2/z-slug/t.resize(h:100,w:200)~t.flip()/path/to/image.jpeg";\nobj = url_to_obj(customDomainUrl, opts={ is_custom_domain: True })\n# obj\n# {\n#     "zone": "z-slug",\n#     "version": "v2",\n#     "transformations": [\n#         {\n#             "plugin": "t",\n#             "name": "resize",\n#             "values": [\n#                 {\n#                     "key": "h",\n#                     "value": "100"\n#                 },\n#                 {\n#                     "key": "w",\n#                     "value": "200"\n#                 }\n#             ]\n#         },\n#         {\n#             "plugin": "t",\n#             "name": "flip",\n#         }\n#     ],\n#     "filePath": "path/to/image.jpeg",\n#     "baseUrl": "https://xyz.designify.media",\n#     "wrkr": False,\n#     "workerPath": "",\n#     "options": {}\n# }\n```\n\n```python\nworkerUrl =\n    "https://cdn.pixelbin.io/v2/your-cloud-name/z-slug/wrkr/resize:h100,w:200/folder/image.jpeg";\n\nobj = url_to_obj(workerUrl)\n# obj\n# {\n#     "cloudName": "your-cloud-name",\n#     "zone": "z-slug",\n#     "version": "v2",\n#     "transformations": [],\n#     "filePath": "",\n#     "worker": True,\n#     "workerPath": "resize:h100,w:200/folder/image.jpeg",\n#     "baseUrl": "https://cdn.pixelbin.io"\n#     "options": {}\n# }\n```\n\n### obj_to_url\n\nConverts the extracted url obj to a Pixelbin url.\n\n| Property                   | Description                                          | Example                               |\n| -------------------------- | ---------------------------------------------------- | ------------------------------------- |\n| `cloudName` (string)       | The cloudname extracted from the URL                 | `your-cloud-name`                     |\n| `zone` (string)            | 6 character zone slug                                | `z-slug`                              |\n| `version` (string)         | CDN API version                                      | `v2`                                  |\n| `transformations` (array)  | Extracted transformations from the URL               | `[{ "plugin": "t", "name": "flip" }]` |\n| `filePath` (string)        | Path to the file on Pixelbin storage                 | `/path/to/image.jpeg`                 |\n| `baseUrl` (string)         | Base URL                                             | `https://cdn.pixelbin.io/`            |\n| `isCustomDomain` (boolean) | Indicates if the URL is for a custom domain          | `False`                               |\n| `worker` (boolean)         | Indicates if the URL is a URL Translation Worker URL | `False`                               |\n| `workerPath` (string)      | Input path to a URL Translation Worker               | `resize:w200,h400/folder/image.jpeg`  |\n| `options` (Object)         | Query parameters added, such as "dpr" and "f_auto"   | `{ "dpr": 2.0, "f_auto": True }`      |\n\n```python\nfrom pixelbin.utils.url import obj_to_url\n\nobj = {\n    cloudName: "your-cloud-name",\n    zone: "z-slug",\n    version: "v2",\n    options: {\n        dpr: 2.0,\n        f_auto: True,\n    },\n    transformations: [\n        {\n            plugin: "t",\n            name: "resize",\n            values: [\n                {\n                    key: "h",\n                    value: "100",\n                },\n                {\n                    key: "w",\n                    value: "200",\n                },\n            ],\n        },\n        {\n            plugin: "t",\n            name: "flip",\n        },\n    ],\n    filePath: "path/to/image.jpeg",\n    baseUrl: "https://cdn.pixelbin.io",\n}\nurl = obj_to_url(obj) # obj is as shown above\n# url\n# https://cdn.pixelbin.io/v2/your-cloud-name/z-slug/t.resize(h:100,w:200)~t.flip()/path/to/image.jpeg?dpr=2.0&f_auto=true\n```\n\nUsage with custom domain\n\n```python\nfrom pixelbin.utils.url import obj_to_url\n\nobj = {\n    zone: "z-slug",\n    version: "v2",\n    transformations: [\n        {\n            plugin: "t",\n            name: "resize",\n            values: [\n                {\n                    key: "h",\n                    value: "100",\n                },\n                {\n                    key: "w",\n                    value: "200",\n                },\n            ],\n        },\n        {\n            plugin: "t",\n            name: "flip",\n        },\n    ],\n    filePath: "path/to/image.jpeg",\n    baseUrl: "https://xyz.designify.media",\n    isCustomDomain: True,\n};\nurl = Pixelbin.utils.objToUrl(obj); # obj is as shown above\n# url\n# https://xyz.designify.media/v2/z-slug/t.resize(h:100,w:200)~t.flip()/path/to/image.jpeg\n```\n\nUsage with URL Translation Worker\n\n```python\nfrom pixelbin.utils.url import obj_to_url\n\nobj = {\n    cloudName: "your-cloud-name",\n    zone: "z-slug",\n    version: "v2",\n    transformations: [],\n    filePath: "",\n    worker: True,\n    workerPath: "resize:h100,w:200/folder/image.jpeg",\n    baseUrl: "https://cdn.pixelbin.io",\n};\nurl = Pixelbin.utils.objToUrl(obj); # obj is as shown above\n# url\n# https://cdn.pixelbin.io/v2/your-cloud-name/z-slug/wrkr/resize:h100,w:200/folder/image.jpeg\n```\n\n## Documentation\n\n-   [API docs](documentation/platform/README.md)\n',
    'author': 'Pixelbin',
    'author_email': 'dev@pixelbin.io',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/pixelbin-dev/pixelbin-python-sdk',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)

import pandas as pd
import numpy as np
from neuronautics.analysis.type.graph_analysis import GraphAnalysis


class {{ class_name }}(GraphAnalysis):
    def get_input_params(self):
        # Define your method logic here
        return [
                    {'name': 'int_parameter_name', 'min': 1, 'max': 1_000, 'default': 100, 'type': 'int'},
                    {'name': 'float_parameter_name', 'min': 0, 'max': 1, 'default': 0.3, 'type': 'float'},
                    {'name': 'bool_parameter_name', 'default': True, 'type': 'bool'},
                ]

    def run(self, spikes, int_parameter_name, float_parameter_name, *args, **kwargs):
        # Define your method logic here
        return np.array([[0, 1, 0], [1, 0, 1], [1, 1, 0]])

    def plot(self, *args, **kwargs):
        return super().plot(title='{{ title }}', *args, **kwargs)

if __name__ == "__main__":
    # Sample dataframe
    sample_data = pd.DataFrame({
        'column1': [1, 2, 3],
        'column2': ['A', 'B', 'C']
    })

    # Instantiate your class and call methods
    instance = {{ class_name }}()
    instance.get_input_params()
    instance.run()
